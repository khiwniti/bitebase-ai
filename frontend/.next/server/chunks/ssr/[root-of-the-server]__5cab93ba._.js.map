{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/services/socketService.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\n\nexport interface AnalysisProgress {\n  sessionId: string;\n  agent: string;\n  agentProgress: number;\n  overallProgress: number;\n  message: string;\n}\n\nexport interface AgentStarted {\n  sessionId: string;\n  agent: string;\n  label: string;\n  progress: number;\n}\n\nexport interface AgentCompleted {\n  sessionId: string;\n  agent: string;\n  data: any;\n}\n\nexport interface AnalysisCompleted {\n  sessionId: string;\n  finalReport: any;\n  timestamp: string;\n}\n\nexport interface AnalysisError {\n  sessionId: string;\n  error: string;\n}\n\nexport class SocketService {\n  private socket: Socket | null = null;\n  private serverUrl: string;\n  private progressCallbacks: Map<string, (progress: AnalysisProgress) => void> = new Map();\n  private agentStartedCallbacks: Map<string, (data: AgentStarted) => void> = new Map();\n  private agentCompletedCallbacks: Map<string, (data: AgentCompleted) => void> = new Map();\n  private analysisCompletedCallbacks: Map<string, (data: AnalysisCompleted) => void> = new Map();\n  private errorCallbacks: Map<string, (error: AnalysisError) => void> = new Map();\n\n  constructor(serverUrl: string = 'http://localhost:3001') {\n    this.serverUrl = serverUrl;\n  }\n\n  connect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.socket?.connected) {\n        resolve();\n        return;\n      }\n\n      this.socket = io(this.serverUrl, {\n        timeout: 10000,\n        forceNew: false,\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionAttempts: 5\n      });\n\n      this.socket.on('connect', () => {\n        console.log('🔌 Connected to BiteBase AI backend');\n        resolve();\n      });\n\n      this.socket.on('connect_error', (error) => {\n        console.error('❌ Socket connection error:', error);\n        reject(error);\n      });\n\n      this.socket.on('disconnect', (reason) => {\n        console.log('❌ Disconnected from backend:', reason);\n      });\n\n      // Set up event listeners\n      this.setupEventListeners();\n    });\n  }\n\n  private setupEventListeners(): void {\n    if (!this.socket) return;\n\n    this.socket.on('progress-update', (data: AnalysisProgress) => {\n      this.progressCallbacks.forEach(callback => callback(data));\n    });\n\n    this.socket.on('agent-started', (data: AgentStarted) => {\n      this.agentStartedCallbacks.forEach(callback => callback(data));\n    });\n\n    this.socket.on('agent-completed', (data: AgentCompleted) => {\n      this.agentCompletedCallbacks.forEach(callback => callback(data));\n    });\n\n    this.socket.on('analysis-completed', (data: AnalysisCompleted) => {\n      this.analysisCompletedCallbacks.forEach(callback => callback(data));\n    });\n\n    this.socket.on('analysis-error', (data: AnalysisError) => {\n      this.errorCallbacks.forEach(callback => callback(data));\n    });\n\n    this.socket.on('analysis-paused', (data: { sessionId: string }) => {\n      console.log(`⏸️ Analysis paused: ${data.sessionId}`);\n    });\n\n    this.socket.on('analysis-resumed', (data: { sessionId: string }) => {\n      console.log(`▶️ Analysis resumed: ${data.sessionId}`);\n    });\n\n    this.socket.on('analysis-stopped', (data: { sessionId: string }) => {\n      console.log(`🛑 Analysis stopped: ${data.sessionId}`);\n    });\n  }\n\n  startAnalysis(sessionId: string, parameters: any): void {\n    if (!this.socket?.connected) {\n      console.error('❌ Socket not connected');\n      return;\n    }\n\n    console.log(`🚀 Starting analysis for session: ${sessionId}`);\n    this.socket.emit('start-analysis', { sessionId, parameters });\n  }\n\n  pauseAnalysis(sessionId: string): void {\n    if (!this.socket?.connected) {\n      console.error('❌ Socket not connected');\n      return;\n    }\n\n    console.log(`⏸️ Pausing analysis: ${sessionId}`);\n    this.socket.emit('pause-analysis', { sessionId });\n  }\n\n  resumeAnalysis(sessionId: string): void {\n    if (!this.socket?.connected) {\n      console.error('❌ Socket not connected');\n      return;\n    }\n\n    console.log(`▶️ Resuming analysis: ${sessionId}`);\n    this.socket.emit('resume-analysis', { sessionId });\n  }\n\n  stopAnalysis(sessionId: string): void {\n    if (!this.socket?.connected) {\n      console.error('❌ Socket not connected');\n      return;\n    }\n\n    console.log(`🛑 Stopping analysis: ${sessionId}`);\n    this.socket.emit('stop-analysis', { sessionId });\n  }\n\n  // Callback registration methods\n  onProgress(callback: (progress: AnalysisProgress) => void): string {\n    const id = Math.random().toString(36).substr(2, 9);\n    this.progressCallbacks.set(id, callback);\n    return id;\n  }\n\n  onAgentStarted(callback: (data: AgentStarted) => void): string {\n    const id = Math.random().toString(36).substr(2, 9);\n    this.agentStartedCallbacks.set(id, callback);\n    return id;\n  }\n\n  onAgentCompleted(callback: (data: AgentCompleted) => void): string {\n    const id = Math.random().toString(36).substr(2, 9);\n    this.agentCompletedCallbacks.set(id, callback);\n    return id;\n  }\n\n  onAnalysisCompleted(callback: (data: AnalysisCompleted) => void): string {\n    const id = Math.random().toString(36).substr(2, 9);\n    this.analysisCompletedCallbacks.set(id, callback);\n    return id;\n  }\n\n  onError(callback: (error: AnalysisError) => void): string {\n    const id = Math.random().toString(36).substr(2, 9);\n    this.errorCallbacks.set(id, callback);\n    return id;\n  }\n\n  // Cleanup methods\n  removeCallback(type: 'progress' | 'agentStarted' | 'agentCompleted' | 'analysisCompleted' | 'error', id: string): void {\n    switch (type) {\n      case 'progress':\n        this.progressCallbacks.delete(id);\n        break;\n      case 'agentStarted':\n        this.agentStartedCallbacks.delete(id);\n        break;\n      case 'agentCompleted':\n        this.agentCompletedCallbacks.delete(id);\n        break;\n      case 'analysisCompleted':\n        this.analysisCompletedCallbacks.delete(id);\n        break;\n      case 'error':\n        this.errorCallbacks.delete(id);\n        break;\n    }\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    \n    // Clear all callbacks\n    this.progressCallbacks.clear();\n    this.agentStartedCallbacks.clear();\n    this.agentCompletedCallbacks.clear();\n    this.analysisCompletedCallbacks.clear();\n    this.errorCallbacks.clear();\n  }\n\n  isConnected(): boolean {\n    return this.socket?.connected || false;\n  }\n\n  getConnectionStatus(): 'connected' | 'disconnected' | 'connecting' {\n    if (!this.socket) return 'disconnected';\n    if (this.socket.connected) return 'connected';\n    if (this.socket.connecting) return 'connecting';\n    return 'disconnected';\n  }\n}\n\n// Global socket service instance\nexport const socketService = new SocketService();"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/realtime/RealTimeProgress.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { socketService, AnalysisProgress, AgentStarted, AgentCompleted, AnalysisCompleted, AnalysisError } from '../../services/socketService';\n\ninterface ProgressBarProps {\n  value: number;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({ value, className = '', size = 'md' }) => {\n  const sizeClasses = {\n    sm: 'h-2',\n    md: 'h-3',\n    lg: 'h-4'\n  };\n\n  return (\n    <div className={`w-full bg-gray-200 rounded-full overflow-hidden ${sizeClasses[size]} ${className}`}>\n      <div \n        className=\"h-full bg-gradient-to-r from-blue-500 to-purple-600 rounded-full transition-all duration-500 ease-out\"\n        style={{ width: `${Math.max(0, Math.min(100, value))}%` }}\n      />\n    </div>\n  );\n};\n\ninterface AgentStatus {\n  name: string;\n  label: string;\n  status: 'pending' | 'running' | 'completed' | 'error';\n  progress: number;\n  data?: any;\n  error?: string;\n}\n\ninterface RealTimeProgressProps {\n  sessionId: string;\n  parameters: any;\n  onAnalysisCompleted?: (data: AnalysisCompleted) => void;\n  onError?: (error: AnalysisError) => void;\n}\n\nexport const RealTimeProgress: React.FC<RealTimeProgressProps> = ({\n  sessionId,\n  parameters,\n  onAnalysisCompleted,\n  onError\n}) => {\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'disconnected'>('disconnected');\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [currentMessage, setCurrentMessage] = useState('Initializing analysis...');\n  const [analysisStarted, setAnalysisStarted] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [agents, setAgents] = useState<AgentStatus[]>([\n    { name: 'product', label: 'Product Analysis', status: 'pending', progress: 0 },\n    { name: 'place', label: 'Place Analysis', status: 'pending', progress: 0 },\n    { name: 'price', label: 'Price Analysis', status: 'pending', progress: 0 },\n    { name: 'promotion', label: 'Promotion Analysis', status: 'pending', progress: 0 },\n    { name: 'report', label: 'Report Generation', status: 'pending', progress: 0 }\n  ]);\n\n  useEffect(() => {\n    const connectSocket = async () => {\n      try {\n        setConnectionStatus('connecting');\n        await socketService.connect();\n        setConnectionStatus('connected');\n      } catch (error) {\n        console.error('Failed to connect to socket:', error);\n        setConnectionStatus('disconnected');\n      }\n    };\n\n    connectSocket();\n\n    // Set up event listeners\n    const progressId = socketService.onProgress((progress: AnalysisProgress) => {\n      if (progress.sessionId !== sessionId) return;\n      \n      setOverallProgress(progress.overallProgress);\n      setCurrentMessage(progress.message);\n      \n      setAgents(prev => prev.map(agent => \n        agent.name === progress.agent \n          ? { ...agent, status: 'running', progress: progress.agentProgress }\n          : agent\n      ));\n    });\n\n    const agentStartedId = socketService.onAgentStarted((data: AgentStarted) => {\n      if (data.sessionId !== sessionId) return;\n      \n      setAgents(prev => prev.map(agent => \n        agent.name === data.agent \n          ? { ...agent, status: 'running', progress: 0 }\n          : agent\n      ));\n      setCurrentMessage(`Starting ${data.label}...`);\n    });\n\n    const agentCompletedId = socketService.onAgentCompleted((data: AgentCompleted) => {\n      if (data.sessionId !== sessionId) return;\n      \n      setAgents(prev => prev.map(agent => \n        agent.name === data.agent \n          ? { ...agent, status: 'completed', progress: 100, data: data.data }\n          : agent\n      ));\n      setCurrentMessage(`${data.agent} analysis completed!`);\n    });\n\n    const analysisCompletedId = socketService.onAnalysisCompleted((data: AnalysisCompleted) => {\n      if (data.sessionId !== sessionId) return;\n      \n      setOverallProgress(100);\n      setCurrentMessage('Analysis completed successfully!');\n      onAnalysisCompleted?.(data);\n    });\n\n    const errorId = socketService.onError((error: AnalysisError) => {\n      if (error.sessionId !== sessionId) return;\n      \n      setCurrentMessage(`Error: ${error.error}`);\n      onError?.(error);\n    });\n\n    return () => {\n      socketService.removeCallback('progress', progressId);\n      socketService.removeCallback('agentStarted', agentStartedId);\n      socketService.removeCallback('agentCompleted', agentCompletedId);\n      socketService.removeCallback('analysisCompleted', analysisCompletedId);\n      socketService.removeCallback('error', errorId);\n    };\n  }, [sessionId, onAnalysisCompleted, onError]);\n\n  const startAnalysis = () => {\n    if (connectionStatus === 'connected') {\n      socketService.startAnalysis(sessionId, parameters);\n      setAnalysisStarted(true);\n      setCurrentMessage('Starting analysis...');\n    }\n  };\n\n  const pauseAnalysis = () => {\n    socketService.pauseAnalysis(sessionId);\n    setIsPaused(true);\n    setCurrentMessage('Analysis paused');\n  };\n\n  const resumeAnalysis = () => {\n    socketService.resumeAnalysis(sessionId);\n    setIsPaused(false);\n    setCurrentMessage('Analysis resumed');\n  };\n\n  const stopAnalysis = () => {\n    socketService.stopAnalysis(sessionId);\n    setAnalysisStarted(false);\n    setIsPaused(false);\n    setOverallProgress(0);\n    setCurrentMessage('Analysis stopped');\n    setAgents(prev => prev.map(agent => ({ \n      ...agent, \n      status: 'pending', \n      progress: 0 \n    })));\n  };\n\n  const getStatusIcon = (status: AgentStatus['status']) => {\n    switch (status) {\n      case 'pending':\n        return '⏳';\n      case 'running':\n        return '🔄';\n      case 'completed':\n        return '✅';\n      case 'error':\n        return '❌';\n    }\n  };\n\n  const getStatusColor = (status: AgentStatus['status']) => {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-500';\n      case 'running':\n        return 'text-blue-600';\n      case 'completed':\n        return 'text-green-600';\n      case 'error':\n        return 'text-red-600';\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6 space-y-6\">\n      {/* Connection Status */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Analysis Progress</h3>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${\n            connectionStatus === 'connected' ? 'bg-green-500' : \n            connectionStatus === 'connecting' ? 'bg-yellow-500' : 'bg-red-500'\n          }`} />\n          <span className=\"text-sm text-gray-600 capitalize\">{connectionStatus}</span>\n        </div>\n      </div>\n\n      {/* Overall Progress */}\n      <div className=\"space-y-3\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm font-medium text-gray-700\">Overall Progress</span>\n          <span className=\"text-sm text-gray-600\">{Math.round(overallProgress)}%</span>\n        </div>\n        <ProgressBar value={overallProgress} size=\"lg\" />\n        <p className=\"text-sm text-gray-600 min-h-[20px]\">{currentMessage}</p>\n      </div>\n\n      {/* Agent Progress */}\n      <div className=\"space-y-4\">\n        <h4 className=\"text-md font-medium text-gray-800\">Agent Status</h4>\n        {agents.map((agent) => (\n          <div key={agent.name} className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-lg\">{getStatusIcon(agent.status)}</span>\n                <span className={`text-sm font-medium ${getStatusColor(agent.status)}`}>\n                  {agent.label}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-600\">{Math.round(agent.progress)}%</span>\n            </div>\n            <ProgressBar value={agent.progress} size=\"sm\" />\n          </div>\n        ))}\n      </div>\n\n      {/* Control Buttons */}\n      <div className=\"flex space-x-3 pt-4 border-t border-gray-200\">\n        {!analysisStarted ? (\n          <button\n            onClick={startAnalysis}\n            disabled={connectionStatus !== 'connected'}\n            className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n          >\n            🚀 Start Analysis\n          </button>\n        ) : (\n          <>\n            {!isPaused ? (\n              <button\n                onClick={pauseAnalysis}\n                className=\"flex-1 bg-yellow-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-yellow-700 transition-colors\"\n              >\n                ⏸️ Pause\n              </button>\n            ) : (\n              <button\n                onClick={resumeAnalysis}\n                className=\"flex-1 bg-green-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-700 transition-colors\"\n              >\n                ▶️ Resume\n              </button>\n            )}\n            <button\n              onClick={stopAnalysis}\n              className=\"flex-1 bg-red-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-red-700 transition-colors\"\n            >\n              🛑 Stop\n            </button>\n          </>\n        )}\n      </div>\n\n      {/* Session Info */}\n      <div className=\"text-xs text-gray-500 pt-2 border-t border-gray-100\">\n        Session ID: {sessionId.slice(0, 8)}...\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeProgress;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/app/realtime-demo/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport RealTimeProgress from '../../components/realtime/RealTimeProgress';\nimport { AnalysisCompleted, AnalysisError } from '../../services/socketService';\n\nexport default function RealTimeDemoPage() {\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  const [analysisResult, setAnalysisResult] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Mock parameters for testing\n  const parameters = {\n    restaurantType: 'Thai Restaurant',\n    cuisine: 'Thai',\n    location: 'Bangkok, Sukhumvit',\n    budget: { min: 1000000, max: 3000000 },\n    radius: 2,\n    targetCustomers: ['Food Enthusiasts', 'Families', 'Young Professionals'],\n    businessModel: 'hybrid'\n  };\n\n  const handleAnalysisCompleted = (data: AnalysisCompleted) => {\n    console.log('Analysis completed:', data);\n    setAnalysisResult(data.finalReport);\n    setError(null);\n  };\n\n  const handleError = (error: AnalysisError) => {\n    console.error('Analysis error:', error);\n    setError(error.error);\n    setAnalysisResult(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-4xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            🍽️ BiteBase AI Real-Time Analysis\n          </h1>\n          <p className=\"text-gray-600\">\n            Watch the 4P analysis workflow in real-time\n          </p>\n        </div>\n\n        {/* Parameters Display */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Analysis Parameters</h2>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium text-gray-700\">Restaurant Type:</span>\n              <span className=\"ml-2 text-gray-600\">{parameters.restaurantType}</span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-700\">Cuisine:</span>\n              <span className=\"ml-2 text-gray-600\">{parameters.cuisine}</span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-700\">Location:</span>\n              <span className=\"ml-2 text-gray-600\">{parameters.location}</span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-700\">Budget Range:</span>\n              <span className=\"ml-2 text-gray-600\">\n                ฿{parameters.budget.min.toLocaleString()} - ฿{parameters.budget.max.toLocaleString()}\n              </span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-700\">Analysis Radius:</span>\n              <span className=\"ml-2 text-gray-600\">{parameters.radius} km</span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-700\">Business Model:</span>\n              <span className=\"ml-2 text-gray-600 capitalize\">{parameters.businessModel}</span>\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <span className=\"font-medium text-gray-700\">Target Customers:</span>\n            <div className=\"mt-2 flex flex-wrap gap-2\">\n              {parameters.targetCustomers.map((customer, index) => (\n                <span key={index} className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs\">\n                  {customer}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Real-Time Progress Component */}\n        <RealTimeProgress\n          sessionId={sessionId}\n          parameters={parameters}\n          onAnalysisCompleted={handleAnalysisCompleted}\n          onError={handleError}\n        />\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <span className=\"text-red-600 text-lg mr-2\">❌</span>\n              <h3 className=\"text-red-800 font-medium\">Analysis Error</h3>\n            </div>\n            <p className=\"text-red-700 mt-2\">{error}</p>\n          </div>\n        )}\n\n        {/* Results Display */}\n        {analysisResult && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n              <span className=\"text-green-600 mr-2\">✅</span>\n              Analysis Results\n            </h2>\n            \n            {/* Executive Summary */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Executive Summary</h3>\n              <p className=\"text-gray-600 leading-relaxed\">{analysisResult.executiveSummary}</p>\n            </div>\n\n            {/* Viability Score */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Viability Score</h3>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex-1 bg-gray-200 rounded-full h-4\">\n                  <div \n                    className=\"bg-gradient-to-r from-green-400 to-green-600 h-4 rounded-full transition-all duration-1000\"\n                    style={{ width: `${analysisResult.viabilityScore}%` }}\n                  />\n                </div>\n                <span className=\"text-2xl font-bold text-green-600\">\n                  {analysisResult.viabilityScore}%\n                </span>\n              </div>\n            </div>\n\n            {/* Risk Assessment */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Risk Assessment</h3>\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"font-medium text-gray-700\">Risk Level:</span>\n                  <span className={`ml-2 px-3 py-1 rounded-full text-xs font-medium ${\n                    analysisResult.riskAssessment.level === 'low' ? 'bg-green-100 text-green-800' :\n                    analysisResult.riskAssessment.level === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {analysisResult.riskAssessment.level.toUpperCase()}\n                  </span>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4 mt-4\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-600 mb-2\">Risk Factors:</h4>\n                    <ul className=\"text-sm text-gray-600 space-y-1\">\n                      {analysisResult.riskAssessment.factors.map((factor: string, index: number) => (\n                        <li key={index} className=\"flex items-start\">\n                          <span className=\"text-red-500 mr-2\">•</span>\n                          {factor}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-gray-600 mb-2\">Mitigation Strategies:</h4>\n                    <ul className=\"text-sm text-gray-600 space-y-1\">\n                      {analysisResult.riskAssessment.mitigation.map((strategy: string, index: number) => (\n                        <li key={index} className=\"flex items-start\">\n                          <span className=\"text-green-500 mr-2\">•</span>\n                          {strategy}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recommendations */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Recommendations</h3>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"bg-blue-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-blue-800 mb-2\">Immediate Actions</h4>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    {analysisResult.recommendations.immediate.map((rec: string, index: number) => (\n                      <li key={index} className=\"flex items-start\">\n                        <span className=\"text-blue-500 mr-2\">•</span>\n                        {rec}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"bg-green-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-green-800 mb-2\">Short Term (1-3 months)</h4>\n                  <ul className=\"text-sm text-green-700 space-y-1\">\n                    {analysisResult.recommendations.shortTerm.map((rec: string, index: number) => (\n                      <li key={index} className=\"flex items-start\">\n                        <span className=\"text-green-500 mr-2\">•</span>\n                        {rec}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"bg-purple-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-purple-800 mb-2\">Long Term (6+ months)</h4>\n                  <ul className=\"text-sm text-purple-700 space-y-1\">\n                    {analysisResult.recommendations.longTerm.map((rec: string, index: number) => (\n                      <li key={index} className=\"flex items-start\">\n                        <span className=\"text-purple-500 mr-2\">•</span>\n                        {rec}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            {/* Financial Summary */}\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Financial Summary</h3>\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    ฿{analysisResult.financialSummary.initialInvestment.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Initial Investment</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    ฿{analysisResult.financialSummary.projectedRevenue.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Annual Revenue</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {analysisResult.financialSummary.breakEvenMonths}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Break-even (months)</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {analysisResult.financialSummary.roiTimeframe}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">ROI Timeframe</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}