{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/generative/LocationCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { MapPin, Star, Users, DollarSign, Clock, CheckCircle, XCircle, Info } from 'lucide-react';\nimport { useSharedState } from '@/components/shared/SharedStateProvider';\n\ninterface LocationCardProps {\n  location: {\n    id?: string;\n    name: string;\n    address: string;\n    coordinates: { lat: number; lng: number };\n    type: 'restaurant' | 'competitor' | 'potential_site' | 'demographic_area';\n    cuisine?: string;\n    priceRange?: '$' | '$$' | '$$$' | '$$$$';\n    rating?: number;\n    reviewCount?: number;\n    capacity?: number;\n    averageSpend?: number;\n    footTraffic?: {\n      level: 'low' | 'medium' | 'high';\n      peakHours: string[];\n    };\n    demographics?: {\n      population: number;\n      avgIncome: string;\n      ageGroup: string;\n    };\n    insights?: string[];\n    opportunityScore?: number;\n  };\n  onApprove: (location: any) => void;\n  onReject: () => void;\n  onRequestMoreInfo: () => void;\n  showActions?: boolean;\n}\n\nexport function LocationCard({ \n  location, \n  onApprove, \n  onReject, \n  onRequestMoreInfo,\n  showActions = true \n}: LocationCardProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { addMarker, addRestaurant } = useSharedState();\n\n  const getTypeColor = (type?: string) => {\n    switch (type) {\n      case 'restaurant': return 'bg-green-100 text-green-800';\n      case 'competitor': return 'bg-red-100 text-red-800';\n      case 'potential_site': return 'bg-blue-100 text-blue-800';\n      case 'demographic_area': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getOpportunityColor = (score?: number) => {\n    if (!score) return 'text-gray-500';\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const handleApprove = async () => {\n    try {\n      // Add to map as marker\n      await addMarker({\n        type: location.type === 'restaurant' ? 'restaurant' : \n              location.type === 'competitor' ? 'competitor' : 'business',\n        position: location.coordinates,\n        title: location.name,\n        description: location.address,\n        properties: {\n          ...location,\n          addedFromChat: true,\n          timestamp: new Date().toISOString(),\n        }\n      });\n\n      // If it's restaurant data, also add to restaurants collection\n      if (location.type === 'restaurant' && location.cuisine) {\n        await addRestaurant({\n          name: location.name,\n          address: location.address || `${location.coordinates.lat}, ${location.coordinates.lng}`,\n          type: 'casual_dining',\n          cuisine: location.cuisine as any,\n          priceRange: location.priceRange || '$$',\n          averageSpend: location.averageSpend || 25,\n          capacity: location.capacity || 50,\n          operatingHours: {\n            monday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n            tuesday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n            wednesday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n            thursday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n            friday: { open: \"11:00\", close: \"23:00\", isOpen: true },\n            saturday: { open: \"11:00\", close: \"23:00\", isOpen: true },\n            sunday: { open: \"12:00\", close: \"21:00\", isOpen: true },\n          },\n          coordinates: location.coordinates,\n          rating: location.rating || 0,\n          reviewCount: location.reviewCount || 0,\n          isCompetitor: false,\n        });\n      }\n\n      onApprove(location);\n    } catch (error) {\n      console.error('Failed to add location:', error);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-md mx-auto border-l-4 border-l-blue-500 shadow-lg hover:shadow-xl transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg font-semibold text-gray-900 truncate\">\n              {location.name}\n            </CardTitle>\n            <CardDescription className=\"text-sm text-gray-600 mt-1\">\n              <MapPin className=\"inline w-4 h-4 mr-1\" />\n              {location.address}\n            </CardDescription>\n          </div>\n          <Badge className={`ml-2 ${getTypeColor(location.type)} flex-shrink-0`}>\n            {location.type?.replace('_', ' ') || 'Unknown'}\n          </Badge>\n        </div>\n\n        {location.opportunityScore !== undefined && (\n          <div className=\"mt-2\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-gray-600\">Opportunity Score</span>\n              <span className={`font-semibold ${getOpportunityColor(location.opportunityScore)}`}>\n                {location.opportunityScore}/100\n              </span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n              <div \n                className={`h-2 rounded-full ${\n                  location.opportunityScore >= 80 ? 'bg-green-500' :\n                  location.opportunityScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n                }`}\n                style={{ width: `${location.opportunityScore}%` }}\n              />\n            </div>\n          </div>\n        )}\n      </CardHeader>\n\n      <CardContent className=\"space-y-3\">\n        {/* Basic Info Row */}\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          {location.cuisine && (\n            <div className=\"flex items-center text-gray-600\">\n              <span className=\"font-medium\">Cuisine:</span>\n              <span className=\"ml-1 capitalize\">{location.cuisine}</span>\n            </div>\n          )}\n          \n          {location.priceRange && (\n            <div className=\"flex items-center text-gray-600\">\n              <DollarSign className=\"w-4 h-4 mr-1\" />\n              <span>{location.priceRange}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Rating & Capacity Row */}\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          {location.rating !== undefined && (\n            <div className=\"flex items-center text-gray-600\">\n              <Star className=\"w-4 h-4 mr-1 text-yellow-500\" />\n              <span>{location.rating.toFixed(1)}</span>\n              {location.reviewCount && (\n                <span className=\"text-gray-400 ml-1\">({location.reviewCount})</span>\n              )}\n            </div>\n          )}\n          \n          {location.capacity && (\n            <div className=\"flex items-center text-gray-600\">\n              <Users className=\"w-4 h-4 mr-1\" />\n              <span>{location.capacity} seats</span>\n            </div>\n          )}\n        </div>\n\n        {/* Foot Traffic */}\n        {location.footTraffic && (\n          <div className=\"text-sm\">\n            <div className=\"flex items-center text-gray-600\">\n              <Clock className=\"w-4 h-4 mr-1\" />\n              <span className=\"font-medium\">Foot Traffic:</span>\n              <Badge variant=\"outline\" className=\"ml-2 text-xs\">\n                {location.footTraffic.level}\n              </Badge>\n            </div>\n            {location.footTraffic.peakHours.length > 0 && (\n              <div className=\"text-gray-500 mt-1\">\n                Peak: {location.footTraffic.peakHours.join(', ')}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Demographics */}\n        {location.demographics && (\n          <div className=\"text-sm text-gray-600\">\n            <div className=\"font-medium\">Demographics:</div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              {location.demographics.population.toLocaleString()} people • \n              {location.demographics.avgIncome} avg income • \n              {location.demographics.ageGroup}\n            </div>\n          </div>\n        )}\n\n        {/* Insights */}\n        {location.insights && location.insights.length > 0 && (\n          <div className=\"text-sm\">\n            <button \n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"flex items-center text-blue-600 hover:text-blue-800 font-medium\"\n            >\n              <Info className=\"w-4 h-4 mr-1\" />\n              AI Insights ({location.insights.length})\n            </button>\n            \n            {isExpanded && (\n              <div className=\"mt-2 space-y-1\">\n                {location.insights.map((insight, idx) => (\n                  <div key={idx} className=\"text-xs text-gray-600 bg-blue-50 p-2 rounded\">\n                    • {insight}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </CardContent>\n\n      {showActions && (\n        <CardFooter className=\"flex gap-2 pt-4\">\n          <Button \n            onClick={handleApprove}\n            className=\"flex-1 bg-green-600 hover:bg-green-700 text-white\"\n            size=\"sm\"\n          >\n            <CheckCircle className=\"w-4 h-4 mr-1\" />\n            Add to Map\n          </Button>\n          \n          <Button \n            onClick={onRequestMoreInfo}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex-1\"\n          >\n            <Info className=\"w-4 h-4 mr-1\" />\n            More Info\n          </Button>\n          \n          <Button \n            onClick={onReject}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"px-3 border-red-200 text-red-600 hover:bg-red-50\"\n          >\n            <XCircle className=\"w-4 h-4\" />\n          </Button>\n        </CardFooter>\n      )}\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className,\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all bg-white\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,yBAAW,+NAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,0PAAC,wLAAsB;QACrB,KAAK;QACL,WAAW,IAAA,qIAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,0PAAC,6LAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,wLAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/generative/MarketAnalysisCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { TrendingUp, TrendingDown, AlertTriangle, CheckCircle, BarChart3, Users, DollarSign, Target, \n         MapPin, Clock, Star, Utensils, TrendingUpIcon, PieChart, Activity, Shield } from 'lucide-react';\nimport { useSharedState } from '@/components/shared/SharedStateProvider';\n\ninterface CompetitorData {\n  name: string;\n  distance: number;\n  rating: number;\n  priceRange: string;\n  cuisine: string;\n  threatLevel: 'low' | 'medium' | 'high' | 'critical';\n  weaknesses: string[];\n  strengths: string[];\n  marketShare: number;\n}\n\ninterface MarketMetrics {\n  marketSize: number; // Total market value in area\n  marketGrowth: number; // Year-over-year growth percentage\n  customerAcquisitionCost: number;\n  averageLifetimeValue: number;\n  marketPenetration: number; // Percentage of market captured\n  seasonalityIndex: number; // Variation coefficient\n}\n\ninterface DemographicInsights {\n  totalPopulation: number;\n  targetDemographic: number; // Population matching target\n  avgIncome: number;\n  diningFrequency: number; // Times per month\n  preferredCuisines: string[];\n  priceToleranceRange: { min: number; max: number };\n  primaryAgeGroups: { [key: string]: number };\n  lifestyleSegments: { [key: string]: number };\n}\n\ninterface MarketAnalysisCardProps {\n  analysis: {\n    id?: string;\n    location: { lat: number; lng: number };\n    locationName?: string;\n    radius: number;\n    competitorCount: number;\n    marketSaturation: 'low' | 'medium' | 'high';\n    opportunityScore: number;\n    confidenceLevel: number; // Statistical confidence 0-100\n    recommendedCuisines: string[];\n    recommendedPriceRange: '$' | '$$' | '$$$' | '$$$$';\n    estimatedRevenue: {\n      conservative: number;\n      realistic: number;\n      optimistic: number;\n    };\n    riskFactors: string[];\n    strengths: string[];\n    insights: string[];\n    // Enhanced analytics\n    competitors?: CompetitorData[];\n    marketMetrics?: MarketMetrics;\n    demographics?: DemographicInsights;\n    recommendations?: {\n      positioning: string;\n      menuStrategy: string[];\n      pricingStrategy: string;\n      marketingChannels: string[];\n      operationalInsights: string[];\n    };\n    swotAnalysis?: {\n      strengths: string[];\n      weaknesses: string[];\n      opportunities: string[];\n      threats: string[];\n    };\n    footTrafficAnalysis?: {\n      peakHours: string[];\n      dailyTraffic: number;\n      seasonalVariation: number;\n      weekdayVsWeekend: { weekday: number; weekend: number };\n    };\n  };\n  onApprove: (analysis: any) => void;\n  onReject: () => void;\n  onRequestDetails: () => void;\n  showActions?: boolean;\n}\n\nexport function MarketAnalysisCard({ \n  analysis, \n  onApprove, \n  onReject, \n  onRequestDetails,\n  showActions = true \n}: MarketAnalysisCardProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { conductMarketAnalysis, addMarker } = useSharedState();\n\n  const getSaturationColor = (saturation: string) => {\n    switch (saturation) {\n      case 'low': return 'bg-green-100 text-green-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'high': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getOpportunityColor = (score: number) => {\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const handleApprove = async () => {\n    try {\n      // Add analysis location as a marker\n      await addMarker({\n        type: 'business',\n        position: analysis.location,\n        title: `Market Analysis - ${analysis.locationName || 'Location'}`,\n        description: `Opportunity Score: ${analysis.opportunityScore}/100`,\n        properties: {\n          analysisData: analysis,\n          type: 'market_analysis',\n          addedFromChat: true,\n          timestamp: new Date().toISOString(),\n        }\n      });\n\n      onApprove(analysis);\n    } catch (error) {\n      console.error('Failed to add market analysis:', error);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-lg mx-auto border-l-4 border-l-purple-500 shadow-lg hover:shadow-xl transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <BarChart3 className=\"w-5 h-5 mr-2 text-purple-600\" />\n              Market Analysis\n            </CardTitle>\n            <CardDescription className=\"text-sm text-gray-600 mt-1\">\n              {analysis.locationName || `${analysis.location.lat.toFixed(4)}, ${analysis.location.lng.toFixed(4)}`} • \n              {analysis.radius}m radius\n            </CardDescription>\n          </div>\n          <Badge className={`ml-2 ${getSaturationColor(analysis.marketSaturation)} flex-shrink-0`}>\n            {analysis.marketSaturation} saturation\n          </Badge>\n        </div>\n\n        {/* Opportunity Score */}\n        <div className=\"mt-3\">\n          <div className=\"flex items-center justify-between text-sm mb-2\">\n            <span className=\"text-gray-600 font-medium\">Opportunity Score</span>\n            <span className={`font-bold text-lg ${getOpportunityColor(analysis.opportunityScore)}`}>\n              {analysis.opportunityScore}/100\n            </span>\n          </div>\n          <Progress value={analysis.opportunityScore} className=\"h-3\" />\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {/* Key Metrics Grid */}\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div className=\"flex items-center text-gray-600\">\n            <Target className=\"w-4 h-4 mr-2 text-blue-500\" />\n            <div>\n              <div className=\"font-medium\">{analysis.competitorCount} Competitors</div>\n              <div className=\"text-xs text-gray-500\">in {analysis.radius}m</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center text-gray-600\">\n            <DollarSign className=\"w-4 h-4 mr-2 text-green-500\" />\n            <div>\n              <div className=\"font-medium\">{analysis.recommendedPriceRange}</div>\n              <div className=\"text-xs text-gray-500\">recommended</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Demographics */}\n        {analysis.demographics && (\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\n            <div className=\"flex items-center text-gray-700 font-medium text-sm mb-2\">\n              <Users className=\"w-4 h-4 mr-2\" />\n              Demographics\n            </div>\n            <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-600\">\n              <div>Population: {analysis.demographics.totalPopulation.toLocaleString()}</div>\n              <div>Avg Income: ${analysis.demographics.avgIncome.toLocaleString()}</div>\n              <div className=\"col-span-2\">Primary Age: {Object.keys(analysis.demographics.primaryAgeGroups).join(', ')}</div>\n            </div>\n          </div>\n        )}\n\n        {/* Revenue Projections */}\n        <div className=\"bg-green-50 p-3 rounded-lg\">\n          <div className=\"flex items-center text-gray-700 font-medium text-sm mb-2\">\n            <TrendingUp className=\"w-4 h-4 mr-2 text-green-600\" />\n            Revenue Projections (Annual)\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"flex justify-between text-xs\">\n              <span className=\"text-gray-600\">Conservative:</span>\n              <span className=\"font-medium text-gray-700\">\n                {formatCurrency(analysis.estimatedRevenue.conservative)}\n              </span>\n            </div>\n            <div className=\"flex justify-between text-xs\">\n              <span className=\"text-gray-600\">Realistic:</span>\n              <span className=\"font-medium text-green-700\">\n                {formatCurrency(analysis.estimatedRevenue.realistic)}\n              </span>\n            </div>\n            <div className=\"flex justify-between text-xs\">\n              <span className=\"text-gray-600\">Optimistic:</span>\n              <span className=\"font-medium text-green-800\">\n                {formatCurrency(analysis.estimatedRevenue.optimistic)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Recommended Cuisines */}\n        {analysis.recommendedCuisines.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">Recommended Cuisines:</div>\n            <div className=\"flex flex-wrap gap-1\">\n              {analysis.recommendedCuisines.slice(0, 3).map((cuisine, idx) => (\n                <Badge key={idx} variant=\"secondary\" className=\"text-xs capitalize\">\n                  {cuisine}\n                </Badge>\n              ))}\n              {analysis.recommendedCuisines.length > 3 && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  +{analysis.recommendedCuisines.length - 3} more\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Risk Factors & Strengths */}\n        <div className=\"grid grid-cols-1 gap-3\">\n          {analysis.riskFactors.length > 0 && (\n            <div>\n              <div className=\"flex items-center text-sm font-medium text-gray-700 mb-1\">\n                <AlertTriangle className=\"w-4 h-4 mr-1 text-orange-500\" />\n                Risk Factors\n              </div>\n              <div className=\"space-y-1\">\n                {analysis.riskFactors.slice(0, 2).map((risk, idx) => (\n                  <div key={idx} className=\"text-xs text-orange-700 bg-orange-50 p-2 rounded\">\n                    • {risk}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {analysis.strengths.length > 0 && (\n            <div>\n              <div className=\"flex items-center text-sm font-medium text-gray-700 mb-1\">\n                <CheckCircle className=\"w-4 h-4 mr-1 text-green-500\" />\n                Strengths\n              </div>\n              <div className=\"space-y-1\">\n                {analysis.strengths.slice(0, 2).map((strength, idx) => (\n                  <div key={idx} className=\"text-xs text-green-700 bg-green-50 p-2 rounded\">\n                    • {strength}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* AI Insights */}\n        {analysis.insights.length > 0 && (\n          <div className=\"border-t pt-3\">\n            <button \n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"flex items-center text-blue-600 hover:text-blue-800 font-medium text-sm w-full text-left\"\n            >\n              <BarChart3 className=\"w-4 h-4 mr-1\" />\n              AI Insights ({analysis.insights.length})\n              <span className=\"ml-auto text-xs\">\n                {isExpanded ? '▲' : '▼'}\n              </span>\n            </button>\n            \n            {isExpanded && (\n              <div className=\"mt-2 space-y-1\">\n                {analysis.insights.map((insight, idx) => (\n                  <div key={idx} className=\"text-xs text-gray-600 bg-blue-50 p-2 rounded\">\n                    • {insight}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </CardContent>\n\n      {showActions && (\n        <CardFooter className=\"flex gap-2 pt-4\">\n          <Button \n            onClick={handleApprove}\n            className=\"flex-1 bg-purple-600 hover:bg-purple-700 text-white\"\n            size=\"sm\"\n          >\n            <CheckCircle className=\"w-4 h-4 mr-1\" />\n            Add Analysis\n          </Button>\n          \n          <Button \n            onClick={onRequestDetails}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex-1\"\n          >\n            <BarChart3 className=\"w-4 h-4 mr-1\" />\n            Full Report\n          </Button>\n          \n          <Button \n            onClick={onReject}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"px-3 border-red-200 text-red-600 hover:bg-red-50\"\n          >\n            ✕\n          </Button>\n        </CardFooter>\n      )}\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/generative/CompetitorAnalysisCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Sword, Star, DollarSign, Users, Clock, CheckCircle, XCircle, Eye, TrendingUp } from 'lucide-react';\nimport { useSharedState } from '@/components/shared/SharedStateProvider';\n\ninterface CompetitorAnalysisCardProps {\n  analysis: {\n    id?: string;\n    location: { lat: number; lng: number };\n    radius: number;\n    competitorCount: number;\n    averageRating: number;\n    priceDistribution: Record<string, number>;\n    cuisineGaps: string[];\n    topCompetitors: Array<{\n      name: string;\n      cuisine: string;\n      rating: number;\n      priceRange: string;\n      distance: number;\n      weaknesses: string[];\n    }>;\n    marketOpportunities: string[];\n    competitiveAdvantages: string[];\n    threats: string[];\n    overallThreatLevel: 'low' | 'medium' | 'high';\n  };\n  onApprove: (analysis: any) => void;\n  onReject: () => void;\n  onViewDetails: () => void;\n  showActions?: boolean;\n}\n\nexport function CompetitorAnalysisCard({ \n  analysis, \n  onApprove, \n  onReject, \n  onViewDetails,\n  showActions = true \n}: CompetitorAnalysisCardProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { addMarker, addLayer } = useSharedState();\n\n  const getThreatColor = (level: string) => {\n    switch (level) {\n      case 'low': return 'bg-green-100 text-green-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'high': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getThreatIcon = (level: string) => {\n    switch (level) {\n      case 'low': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n      case 'medium': return <Clock className=\"w-4 h-4 text-yellow-600\" />;\n      case 'high': return <Sword className=\"w-4 h-4 text-red-600\" />;\n      default: return <Users className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const handleApprove = async () => {\n    try {\n      // Add competitor analysis as a layer with all competitor locations\n      const layerId = await addLayer({\n        type: 'competitors',\n        visible: true,\n        data: analysis.topCompetitors.map(comp => ({\n          ...comp,\n          coordinates: analysis.location, // This would normally be each competitor's actual location\n        })),\n        style: {\n          color: 'red',\n          opacity: 0.7,\n        }\n      });\n\n      // Add central analysis point\n      await addMarker({\n        type: 'business',\n        position: analysis.location,\n        title: 'Competitor Analysis',\n        description: `${analysis.competitorCount} competitors • ${analysis.overallThreatLevel} threat`,\n        properties: {\n          analysisData: analysis,\n          type: 'competitor_analysis',\n          layerId,\n          addedFromChat: true,\n          timestamp: new Date().toISOString(),\n        }\n      });\n\n      onApprove(analysis);\n    } catch (error) {\n      console.error('Failed to add competitor analysis:', error);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-lg mx-auto border-l-4 border-l-red-500 shadow-lg hover:shadow-xl transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <Sword className=\"w-5 h-5 mr-2 text-red-600\" />\n              Competitor Analysis\n            </CardTitle>\n            <CardDescription className=\"text-sm text-gray-600 mt-1\">\n              {analysis.radius}m radius • {analysis.competitorCount} competitors found\n            </CardDescription>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            {getThreatIcon(analysis.overallThreatLevel)}\n            <Badge className={`${getThreatColor(analysis.overallThreatLevel)} flex-shrink-0`}>\n              {analysis.overallThreatLevel} threat\n            </Badge>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {/* Competition Overview */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-gray-900\">{analysis.competitorCount}</div>\n            <div className=\"text-xs text-gray-600\">Total Competitors</div>\n          </div>\n          <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n            <div className=\"text-2xl font-bold text-gray-900 flex items-center justify-center\">\n              <Star className=\"w-5 h-5 text-yellow-500 mr-1\" />\n              {analysis.averageRating.toFixed(1)}\n            </div>\n            <div className=\"text-xs text-gray-600\">Avg Rating</div>\n          </div>\n        </div>\n\n        {/* Price Distribution */}\n        <div>\n          <div className=\"text-sm font-medium text-gray-700 mb-2\">Price Range Distribution</div>\n          <div className=\"space-y-2\">\n            {Object.entries(analysis.priceDistribution).map(([range, count]) => (\n              <div key={range} className=\"flex items-center\">\n                <span className=\"text-sm text-gray-600 w-8\">{range}</span>\n                <div className=\"flex-1 mx-2\">\n                  <Progress \n                    value={(count / analysis.competitorCount) * 100} \n                    className=\"h-2\"\n                  />\n                </div>\n                <span className=\"text-xs text-gray-500 w-8\">{count}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Top Competitors */}\n        {analysis.topCompetitors.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">Top Competitors</div>\n            <div className=\"space-y-2\">\n              {analysis.topCompetitors.slice(0, 3).map((competitor, idx) => (\n                <div key={idx} className=\"bg-red-50 p-3 rounded-lg border-l-2 border-red-200\">\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <span className=\"font-medium text-gray-900 text-sm\">{competitor.name}</span>\n                    <div className=\"flex items-center text-xs text-gray-600\">\n                      <Star className=\"w-3 h-3 text-yellow-500 mr-1\" />\n                      {competitor.rating}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between text-xs text-gray-600\">\n                    <span className=\"capitalize\">{competitor.cuisine} • {competitor.priceRange}</span>\n                    <span>{competitor.distance}m away</span>\n                  </div>\n                  {competitor.weaknesses.length > 0 && (\n                    <div className=\"mt-1 text-xs text-green-700\">\n                      Weakness: {competitor.weaknesses[0]}\n                    </div>\n                  )}\n                </div>\n              ))}\n              {analysis.topCompetitors.length > 3 && (\n                <div className=\"text-center\">\n                  <button \n                    onClick={() => setIsExpanded(!isExpanded)}\n                    className=\"text-blue-600 hover:text-blue-800 text-xs\"\n                  >\n                    {isExpanded ? 'Show Less' : `+${analysis.topCompetitors.length - 3} more competitors`}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Cuisine Gaps */}\n        {analysis.cuisineGaps.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n              <TrendingUp className=\"w-4 h-4 mr-1 text-green-600\" />\n              Market Opportunities\n            </div>\n            <div className=\"flex flex-wrap gap-1\">\n              {analysis.cuisineGaps.map((cuisine, idx) => (\n                <Badge key={idx} variant=\"outline\" className=\"text-xs bg-green-50 text-green-700 border-green-200\">\n                  {cuisine}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Competitive Advantages */}\n        {analysis.competitiveAdvantages.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n              <CheckCircle className=\"w-4 h-4 mr-1 text-blue-600\" />\n              Your Advantages\n            </div>\n            <div className=\"space-y-1\">\n              {analysis.competitiveAdvantages.slice(0, 2).map((advantage, idx) => (\n                <div key={idx} className=\"text-xs text-blue-700 bg-blue-50 p-2 rounded\">\n                  • {advantage}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Threats */}\n        {analysis.threats.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n              <Sword className=\"w-4 h-4 mr-1 text-red-600\" />\n              Key Threats\n            </div>\n            <div className=\"space-y-1\">\n              {analysis.threats.slice(0, 2).map((threat, idx) => (\n                <div key={idx} className=\"text-xs text-red-700 bg-red-50 p-2 rounded\">\n                  • {threat}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Market Opportunities */}\n        {analysis.marketOpportunities.length > 0 && isExpanded && (\n          <div>\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">Market Opportunities</div>\n            <div className=\"space-y-1\">\n              {analysis.marketOpportunities.map((opportunity, idx) => (\n                <div key={idx} className=\"text-xs text-gray-600 bg-gray-50 p-2 rounded\">\n                  • {opportunity}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </CardContent>\n\n      {showActions && (\n        <CardFooter className=\"flex gap-2 pt-4\">\n          <Button \n            onClick={handleApprove}\n            className=\"flex-1 bg-red-600 hover:bg-red-700 text-white\"\n            size=\"sm\"\n          >\n            <CheckCircle className=\"w-4 h-4 mr-1\" />\n            Add Analysis\n          </Button>\n          \n          <Button \n            onClick={onViewDetails}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex-1\"\n          >\n            <Eye className=\"w-4 h-4 mr-1\" />\n            Details\n          </Button>\n          \n          <Button \n            onClick={onReject}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"px-3 border-red-200 text-red-600 hover:bg-red-50\"\n          >\n            <XCircle className=\"w-4 h-4\" />\n          </Button>\n        </CardFooter>\n      )}\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2053, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/generative/CustomReportLayoutManager.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { Card, CardHeader, CardContent } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Badge } from '../ui/badge';\nimport { Separator } from '../ui/separator';\nimport { \n  Layout, \n  Grid3x3, \n  Columns, \n  Rows, \n  Eye, \n  EyeOff, \n  Settings, \n  Palette,\n  Download,\n  Share,\n  Maximize,\n  Minimize,\n  RotateCcw,\n  Save\n} from 'lucide-react';\n\n// Report Layout Types\nexport type LayoutType = 'grid' | 'masonry' | 'single-column' | 'two-column' | 'dashboard' | 'magazine' | 'card-deck';\nexport type ThemeVariant = 'professional' | 'modern' | 'minimalist' | 'vibrant' | 'dark' | 'high-contrast';\nexport type ColorScheme = 'blue' | 'green' | 'purple' | 'orange' | 'red' | 'teal' | 'indigo' | 'custom';\n\nexport interface ReportSection {\n  id: string;\n  title: string;\n  type: 'chart' | 'table' | 'text' | 'image' | 'map' | 'metric' | 'comparison' | 'timeline';\n  content: any;\n  position: { row: number; col: number; width: number; height: number };\n  isVisible: boolean;\n  style?: {\n    backgroundColor?: string;\n    borderColor?: string;\n    textColor?: string;\n    fontSize?: string;\n    padding?: string;\n    borderRadius?: string;\n    shadow?: boolean;\n  };\n}\n\nexport interface ReportLayout {\n  id: string;\n  name: string;\n  type: LayoutType;\n  theme: ThemeVariant;\n  colorScheme: ColorScheme;\n  sections: ReportSection[];\n  metadata: {\n    createdAt: Date;\n    updatedAt: Date;\n    version: string;\n    description?: string;\n  };\n}\n\ninterface CustomReportLayoutManagerProps {\n  reportId: string;\n  initialLayout?: ReportLayout;\n  onLayoutChange?: (layout: ReportLayout) => void;\n  onSave?: (layout: ReportLayout) => void;\n  className?: string;\n}\n\n// Default layout templates\nconst DEFAULT_LAYOUTS: Record<LayoutType, Partial<ReportLayout>> = {\n  'grid': {\n    name: 'Grid Layout',\n    type: 'grid',\n    sections: []\n  },\n  'masonry': {\n    name: 'Masonry Layout',\n    type: 'masonry',\n    sections: []\n  },\n  'single-column': {\n    name: 'Single Column',\n    type: 'single-column',\n    sections: []\n  },\n  'two-column': {\n    name: 'Two Column',\n    type: 'two-column',\n    sections: []\n  },\n  'dashboard': {\n    name: 'Dashboard',\n    type: 'dashboard',\n    sections: []\n  },\n  'magazine': {\n    name: 'Magazine Style',\n    type: 'magazine',\n    sections: []\n  },\n  'card-deck': {\n    name: 'Card Deck',\n    type: 'card-deck',\n    sections: []\n  }\n};\n\nconst THEME_COLORS: Record<ThemeVariant, { primary: string; secondary: string; accent: string; background: string }> = {\n  'professional': {\n    primary: '#1e40af',\n    secondary: '#64748b',\n    accent: '#f59e0b',\n    background: '#ffffff'\n  },\n  'modern': {\n    primary: '#6366f1',\n    secondary: '#8b5cf6',\n    accent: '#ec4899',\n    background: '#fafafa'\n  },\n  'minimalist': {\n    primary: '#374151',\n    secondary: '#9ca3af',\n    accent: '#f3f4f6',\n    background: '#ffffff'\n  },\n  'vibrant': {\n    primary: '#dc2626',\n    secondary: '#ea580c',\n    accent: '#ca8a04',\n    background: '#fef7ff'\n  },\n  'dark': {\n    primary: '#3b82f6',\n    secondary: '#64748b',\n    accent: '#f59e0b',\n    background: '#0f172a'\n  },\n  'high-contrast': {\n    primary: '#000000',\n    secondary: '#ffffff',\n    accent: '#ff0000',\n    background: '#ffffff'\n  }\n};\n\nexport default function CustomReportLayoutManager({\n  reportId,\n  initialLayout,\n  onLayoutChange,\n  onSave,\n  className = ''\n}: CustomReportLayoutManagerProps) {\n  const [currentLayout, setCurrentLayout] = useState<ReportLayout>(() => {\n    if (initialLayout) return initialLayout;\n    \n    return {\n      id: `layout-${reportId}`,\n      name: 'My Report Layout',\n      type: 'dashboard',\n      theme: 'professional',\n      colorScheme: 'blue',\n      sections: [],\n      metadata: {\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        version: '1.0.0'\n      }\n    };\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedSection, setSelectedSection] = useState<string | null>(null);\n  const [showStylePanel, setShowStylePanel] = useState(false);\n\n  // Computed styles based on theme and color scheme\n  const themeStyles = useMemo(() => {\n    const baseColors = THEME_COLORS[currentLayout.theme];\n    return {\n      '--primary-color': baseColors.primary,\n      '--secondary-color': baseColors.secondary,\n      '--accent-color': baseColors.accent,\n      '--background-color': baseColors.background,\n    } as React.CSSProperties;\n  }, [currentLayout.theme]);\n\n  const handleLayoutTypeChange = useCallback((newType: LayoutType) => {\n    const updatedLayout = {\n      ...currentLayout,\n      type: newType,\n      metadata: {\n        ...currentLayout.metadata,\n        updatedAt: new Date()\n      }\n    };\n    setCurrentLayout(updatedLayout);\n    onLayoutChange?.(updatedLayout);\n  }, [currentLayout, onLayoutChange]);\n\n  const handleThemeChange = useCallback((newTheme: ThemeVariant) => {\n    const updatedLayout = {\n      ...currentLayout,\n      theme: newTheme,\n      metadata: {\n        ...currentLayout.metadata,\n        updatedAt: new Date()\n      }\n    };\n    setCurrentLayout(updatedLayout);\n    onLayoutChange?.(updatedLayout);\n  }, [currentLayout, onLayoutChange]);\n\n  const handleSectionToggle = useCallback((sectionId: string) => {\n    const updatedSections = currentLayout.sections.map(section =>\n      section.id === sectionId\n        ? { ...section, isVisible: !section.isVisible }\n        : section\n    );\n    \n    const updatedLayout = {\n      ...currentLayout,\n      sections: updatedSections,\n      metadata: {\n        ...currentLayout.metadata,\n        updatedAt: new Date()\n      }\n    };\n    \n    setCurrentLayout(updatedLayout);\n    onLayoutChange?.(updatedLayout);\n  }, [currentLayout, onLayoutChange]);\n\n  const handleSave = useCallback(() => {\n    onSave?.(currentLayout);\n  }, [currentLayout, onSave]);\n\n  const renderLayoutPreview = () => {\n    const layoutClass = `layout-${currentLayout.type}`;\n    const themeClass = `theme-${currentLayout.theme}`;\n    \n    return (\n      <div \n        className={`report-preview ${layoutClass} ${themeClass} p-4 bg-white rounded-lg border-2 border-gray-200 min-h-96`}\n        style={themeStyles}\n      >\n        {currentLayout.sections.length === 0 ? (\n          <div className=\"flex items-center justify-center h-full text-gray-500\">\n            <div className=\"text-center\">\n              <Grid3x3 className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n              <p>No sections added yet</p>\n              <p className=\"text-sm\">Add sections to see your layout preview</p>\n            </div>\n          </div>\n        ) : (\n          <div className={`grid gap-4 ${getGridClasses(currentLayout.type)}`}>\n            {currentLayout.sections\n              .filter(section => section.isVisible)\n              .map(section => (\n                <div\n                  key={section.id}\n                  className={`section-${section.type} p-4 bg-gray-50 rounded border ${\n                    selectedSection === section.id ? 'ring-2 ring-blue-500' : ''\n                  }`}\n                  style={section.style}\n                  onClick={() => setSelectedSection(section.id)}\n                >\n                  <h3 className=\"font-medium text-sm mb-2\">{section.title}</h3>\n                  <div className=\"h-16 bg-gradient-to-r from-gray-200 to-gray-300 rounded opacity-50\" />\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getGridClasses = (type: LayoutType) => {\n    switch (type) {\n      case 'grid': return 'grid-cols-3';\n      case 'two-column': return 'grid-cols-2';\n      case 'single-column': return 'grid-cols-1';\n      case 'dashboard': return 'grid-cols-4';\n      case 'masonry': return 'columns-3';\n      case 'magazine': return 'grid-cols-12';\n      case 'card-deck': return 'flex flex-wrap';\n      default: return 'grid-cols-3';\n    }\n  };\n\n  return (\n    <div className={`custom-report-layout-manager ${className}`}>\n      {/* Layout Controls */}\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <Layout className=\"h-5 w-5\" />\n              <h3 className=\"text-lg font-semibold\">Report Layout Customization</h3>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setShowStylePanel(!showStylePanel)}\n              >\n                <Palette className=\"h-4 w-4 mr-2\" />\n                Style\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setIsEditing(!isEditing)}\n              >\n                <Settings className=\"h-4 w-4 mr-2\" />\n                {isEditing ? 'Preview' : 'Edit'}\n              </Button>\n              <Button size=\"sm\" onClick={handleSave}>\n                <Save className=\"h-4 w-4 mr-2\" />\n                Save Layout\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {/* Layout Type Selector */}\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-2\">Layout Type</label>\n            <div className=\"grid grid-cols-4 gap-2\">\n              {Object.keys(DEFAULT_LAYOUTS).map((type) => (\n                <Button\n                  key={type}\n                  variant={currentLayout.type === type ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => handleLayoutTypeChange(type as LayoutType)}\n                  className=\"text-xs\"\n                >\n                  {DEFAULT_LAYOUTS[type as LayoutType].name}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Theme Selector */}\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-2\">Theme</label>\n            <div className=\"grid grid-cols-3 gap-2\">\n              {Object.keys(THEME_COLORS).map((theme) => (\n                <Button\n                  key={theme}\n                  variant={currentLayout.theme === theme ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => handleThemeChange(theme as ThemeVariant)}\n                  className=\"text-xs capitalize\"\n                >\n                  {theme.replace('-', ' ')}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Section Visibility Controls */}\n          {currentLayout.sections.length > 0 && (\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Section Visibility</label>\n              <div className=\"space-y-2\">\n                {currentLayout.sections.map((section) => (\n                  <div key={section.id} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                    <span className=\"text-sm\">{section.title}</span>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleSectionToggle(section.id)}\n                    >\n                      {section.isVisible ? (\n                        <Eye className=\"h-4 w-4\" />\n                      ) : (\n                        <EyeOff className=\"h-4 w-4\" />\n                      )}\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Layout Preview */}\n      <Card>\n        <CardHeader>\n          <h4 className=\"text-md font-medium\">Layout Preview</h4>\n        </CardHeader>\n        <CardContent>\n          {renderLayoutPreview()}\n        </CardContent>\n      </Card>\n\n      {/* Style Panel (if open) */}\n      {showStylePanel && (\n        <Card className=\"mt-6\">\n          <CardHeader>\n            <h4 className=\"text-md font-medium\">Advanced Styling</h4>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm text-gray-600\">\n              Advanced styling options for colors, typography, spacing, and more coming soon...\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;AAsEA,2BAA2B;AAC3B,MAAM,kBAA6D;IACjE,QAAQ;QACN,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,WAAW;QACT,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,iBAAiB;QACf,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,cAAc;QACZ,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,aAAa;QACX,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,YAAY;QACV,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;IACA,aAAa;QACX,MAAM;QACN,MAAM;QACN,UAAU,EAAE;IACd;AACF;AAEA,MAAM,eAAiH;IACrH,gBAAgB;QACd,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;IACA,UAAU;QACR,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;IACA,cAAc;QACZ,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;IACA,WAAW;QACT,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;IACA,QAAQ;QACN,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;IACA,iBAAiB;QACf,SAAS;QACT,WAAW;QACX,QAAQ;QACR,YAAY;IACd;AACF;AAEe,SAAS,0BAA0B,EAChD,QAAQ,EACR,aAAa,EACb,cAAc,EACd,MAAM,EACN,YAAY,EAAE,EACiB;IAC/B,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,6NAAQ,EAAe;QAC/D,IAAI,eAAe,OAAO;QAE1B,OAAO;YACL,IAAI,CAAC,OAAO,EAAE,UAAU;YACxB,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;YACb,UAAU,EAAE;YACZ,UAAU;gBACR,WAAW,IAAI;gBACf,WAAW,IAAI;gBACf,SAAS;YACX;QACF;IACF;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,6NAAQ,EAAC;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,6NAAQ,EAAgB;IACtE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,6NAAQ,EAAC;IAErD,kDAAkD;IAClD,MAAM,cAAc,IAAA,4NAAO,EAAC;QAC1B,MAAM,aAAa,YAAY,CAAC,cAAc,KAAK,CAAC;QACpD,OAAO;YACL,mBAAmB,WAAW,OAAO;YACrC,qBAAqB,WAAW,SAAS;YACzC,kBAAkB,WAAW,MAAM;YACnC,sBAAsB,WAAW,UAAU;QAC7C;IACF,GAAG;QAAC,cAAc,KAAK;KAAC;IAExB,MAAM,yBAAyB,IAAA,gOAAW,EAAC,CAAC;QAC1C,MAAM,gBAAgB;YACpB,GAAG,aAAa;YAChB,MAAM;YACN,UAAU;gBACR,GAAG,cAAc,QAAQ;gBACzB,WAAW,IAAI;YACjB;QACF;QACA,iBAAiB;QACjB,iBAAiB;IACnB,GAAG;QAAC;QAAe;KAAe;IAElC,MAAM,oBAAoB,IAAA,gOAAW,EAAC,CAAC;QACrC,MAAM,gBAAgB;YACpB,GAAG,aAAa;YAChB,OAAO;YACP,UAAU;gBACR,GAAG,cAAc,QAAQ;gBACzB,WAAW,IAAI;YACjB;QACF;QACA,iBAAiB;QACjB,iBAAiB;IACnB,GAAG;QAAC;QAAe;KAAe;IAElC,MAAM,sBAAsB,IAAA,gOAAW,EAAC,CAAC;QACvC,MAAM,kBAAkB,cAAc,QAAQ,CAAC,GAAG,CAAC,CAAA,UACjD,QAAQ,EAAE,KAAK,YACX;gBAAE,GAAG,OAAO;gBAAE,WAAW,CAAC,QAAQ,SAAS;YAAC,IAC5C;QAGN,MAAM,gBAAgB;YACpB,GAAG,aAAa;YAChB,UAAU;YACV,UAAU;gBACR,GAAG,cAAc,QAAQ;gBACzB,WAAW,IAAI;YACjB;QACF;QAEA,iBAAiB;QACjB,iBAAiB;IACnB,GAAG;QAAC;QAAe;KAAe;IAElC,MAAM,aAAa,IAAA,gOAAW,EAAC;QAC7B,SAAS;IACX,GAAG;QAAC;QAAe;KAAO;IAE1B,MAAM,sBAAsB;QAC1B,MAAM,cAAc,CAAC,OAAO,EAAE,cAAc,IAAI,EAAE;QAClD,MAAM,aAAa,CAAC,MAAM,EAAE,cAAc,KAAK,EAAE;QAEjD,qBACE,0PAAC;YACC,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,WAAW,0DAA0D,CAAC;YAClH,OAAO;sBAEN,cAAc,QAAQ,CAAC,MAAM,KAAK,kBACjC,0PAAC;gBAAI,WAAU;0BACb,cAAA,0PAAC;oBAAI,WAAU;;sCACb,0PAAC,mOAAO;4BAAC,WAAU;;;;;;sCACnB,0PAAC;sCAAE;;;;;;sCACH,0PAAC;4BAAE,WAAU;sCAAU;;;;;;;;;;;;;;;;qCAI3B,0PAAC;gBAAI,WAAW,CAAC,WAAW,EAAE,eAAe,cAAc,IAAI,GAAG;0BAC/D,cAAc,QAAQ,CACpB,MAAM,CAAC,CAAA,UAAW,QAAQ,SAAS,EACnC,GAAG,CAAC,CAAA,wBACH,0PAAC;wBAEC,WAAW,CAAC,QAAQ,EAAE,QAAQ,IAAI,CAAC,+BAA+B,EAChE,oBAAoB,QAAQ,EAAE,GAAG,yBAAyB,IAC1D;wBACF,OAAO,QAAQ,KAAK;wBACpB,SAAS,IAAM,mBAAmB,QAAQ,EAAE;;0CAE5C,0PAAC;gCAAG,WAAU;0CAA4B,QAAQ,KAAK;;;;;;0CACvD,0PAAC;gCAAI,WAAU;;;;;;;uBARV,QAAQ,EAAE;;;;;;;;;;;;;;;IAe/B;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAc,OAAO;YAC1B,KAAK;gBAAiB,OAAO;YAC7B,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAa,OAAO;YACzB;gBAAS,OAAO;QAClB;IACF;IAEA,qBACE,0PAAC;QAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW;;0BAEzD,0PAAC,oJAAI;gBAAC,WAAU;;kCACd,0PAAC,0JAAU;kCACT,cAAA,0PAAC;4BAAI,WAAU;;8CACb,0PAAC;oCAAI,WAAU;;sDACb,0PAAC,2OAAM;4CAAC,WAAU;;;;;;sDAClB,0PAAC;4CAAG,WAAU;sDAAwB;;;;;;;;;;;;8CAExC,0PAAC;oCAAI,WAAU;;sDACb,0PAAC,wJAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS,IAAM,kBAAkB,CAAC;;8DAElC,0PAAC,+NAAO;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;sDAGtC,0PAAC,wJAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS,IAAM,aAAa,CAAC;;8DAE7B,0PAAC,kOAAQ;oDAAC,WAAU;;;;;;gDACnB,YAAY,YAAY;;;;;;;sDAE3B,0PAAC,wJAAM;4CAAC,MAAK;4CAAK,SAAS;;8DACzB,0PAAC,sNAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;;;;;;;;;;;;kCAMzC,0PAAC,2JAAW;;0CAEV,0PAAC;gCAAI,WAAU;;kDACb,0PAAC;wCAAM,WAAU;kDAAiC;;;;;;kDAClD,0PAAC;wCAAI,WAAU;kDACZ,OAAO,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,qBACjC,0PAAC,wJAAM;gDAEL,SAAS,cAAc,IAAI,KAAK,OAAO,YAAY;gDACnD,MAAK;gDACL,SAAS,IAAM,uBAAuB;gDACtC,WAAU;0DAET,eAAe,CAAC,KAAmB,CAAC,IAAI;+CANpC;;;;;;;;;;;;;;;;0CAab,0PAAC;gCAAI,WAAU;;kDACb,0PAAC;wCAAM,WAAU;kDAAiC;;;;;;kDAClD,0PAAC;wCAAI,WAAU;kDACZ,OAAO,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,sBAC9B,0PAAC,wJAAM;gDAEL,SAAS,cAAc,KAAK,KAAK,QAAQ,YAAY;gDACrD,MAAK;gDACL,SAAS,IAAM,kBAAkB;gDACjC,WAAU;0DAET,MAAM,OAAO,CAAC,KAAK;+CANf;;;;;;;;;;;;;;;;4BAaZ,cAAc,QAAQ,CAAC,MAAM,GAAG,mBAC/B,0PAAC;;kDACC,0PAAC;wCAAM,WAAU;kDAAiC;;;;;;kDAClD,0PAAC;wCAAI,WAAU;kDACZ,cAAc,QAAQ,CAAC,GAAG,CAAC,CAAC,wBAC3B,0PAAC;gDAAqB,WAAU;;kEAC9B,0PAAC;wDAAK,WAAU;kEAAW,QAAQ,KAAK;;;;;;kEACxC,0PAAC,wJAAM;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS,IAAM,oBAAoB,QAAQ,EAAE;kEAE5C,QAAQ,SAAS,iBAChB,0PAAC,mNAAG;4DAAC,WAAU;;;;;iFAEf,0PAAC,gOAAM;4DAAC,WAAU;;;;;;;;;;;;+CAVd,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAsBhC,0PAAC,oJAAI;;kCACH,0PAAC,0JAAU;kCACT,cAAA,0PAAC;4BAAG,WAAU;sCAAsB;;;;;;;;;;;kCAEtC,0PAAC,2JAAW;kCACT;;;;;;;;;;;;YAKJ,gCACC,0PAAC,oJAAI;gBAAC,WAAU;;kCACd,0PAAC,0JAAU;kCACT,cAAA,0PAAC;4BAAG,WAAU;sCAAsB;;;;;;;;;;;kCAEtC,0PAAC,2JAAW;kCACV,cAAA,0PAAC;4BAAI,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;AAQnD","debugId":null}},
    {"offset": {"line": 2672, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/services/restaurant-data-service.ts"],"sourcesContent":["// Restaurant Data Service - MCP-powered data collection and analysis\nexport interface Restaurant {\n  id: string;\n  name: string;\n  location: {\n    lat: number;\n    lng: number;\n    address: string;\n  };\n  cuisine: string[];\n  priceRange: number; // 1-4 scale\n  rating: number;\n  reviewCount: number;\n  deliveryAvailable: boolean;\n  features: string[];\n}\n\nexport interface MarketData {\n  restaurants: Restaurant[];\n  competitorDensity: number;\n  avgPricing: number;\n  popularCuisines: string[];\n  marketSaturation: number;\n}\n\nexport class RestaurantDataService {\n  async getRestaurantsInArea(lat: number, lng: number, radius: number): Promise<Restaurant[]> {\n    // Simulated data for development\n    return [\n      {\n        id: '1',\n        name: 'Thai Garden',\n        location: { lat: lat + 0.001, lng: lng + 0.001, address: '123 Main St' },\n        cuisine: ['Thai'],\n        priceRange: 2,\n        rating: 4.2,\n        reviewCount: 156,\n        deliveryAvailable: true,\n        features: ['Outdoor Seating', 'Delivery']\n      },\n      {\n        id: '2', \n        name: 'Sushi Express',\n        location: { lat: lat - 0.001, lng: lng + 0.002, address: '456 Oak Ave' },\n        cuisine: ['Japanese', 'Sushi'],\n        priceRange: 3,\n        rating: 4.5,\n        reviewCount: 89,\n        deliveryAvailable: true,\n        features: ['Takeout', 'Delivery']\n      }\n    ];\n  }\n\n  async analyzeMarket(location: { lat: number; lng: number }, radius: number): Promise<MarketData> {\n    const restaurants = await this.getRestaurantsInArea(location.lat, location.lng, radius);\n    \n    return {\n      restaurants,\n      competitorDensity: restaurants.length / (Math.PI * radius * radius),\n      avgPricing: restaurants.reduce((sum, r) => sum + r.priceRange, 0) / restaurants.length,\n      popularCuisines: ['Thai', 'Japanese', 'Italian'],\n      marketSaturation: 0.65\n    };\n  }\n}\n\nexport const restaurantDataService = new RestaurantDataService();"],"names":[],"mappings":"AAAA,qEAAqE;;;;;;;AAyB9D,MAAM;IACX,MAAM,qBAAqB,GAAW,EAAE,GAAW,EAAE,MAAc,EAAyB;QAC1F,iCAAiC;QACjC,OAAO;YACL;gBACE,IAAI;gBACJ,MAAM;gBACN,UAAU;oBAAE,KAAK,MAAM;oBAAO,KAAK,MAAM;oBAAO,SAAS;gBAAc;gBACvE,SAAS;oBAAC;iBAAO;gBACjB,YAAY;gBACZ,QAAQ;gBACR,aAAa;gBACb,mBAAmB;gBACnB,UAAU;oBAAC;oBAAmB;iBAAW;YAC3C;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,UAAU;oBAAE,KAAK,MAAM;oBAAO,KAAK,MAAM;oBAAO,SAAS;gBAAc;gBACvE,SAAS;oBAAC;oBAAY;iBAAQ;gBAC9B,YAAY;gBACZ,QAAQ;gBACR,aAAa;gBACb,mBAAmB;gBACnB,UAAU;oBAAC;oBAAW;iBAAW;YACnC;SACD;IACH;IAEA,MAAM,cAAc,QAAsC,EAAE,MAAc,EAAuB;QAC/F,MAAM,cAAc,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,EAAE,SAAS,GAAG,EAAE;QAEhF,OAAO;YACL;YACA,mBAAmB,YAAY,MAAM,GAAG,CAAC,KAAK,EAAE,GAAG,SAAS,MAAM;YAClE,YAAY,YAAY,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,UAAU,EAAE,KAAK,YAAY,MAAM;YACtF,iBAAiB;gBAAC;gBAAQ;gBAAY;aAAU;YAChD,kBAAkB;QACpB;IACF;AACF;AAEO,MAAM,wBAAwB,IAAI","debugId":null}},
    {"offset": {"line": 2746, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/generative/GenerativeUIManager.tsx"],"sourcesContent":["import React, { useState, useCallback, Suspense } from 'react';\nimport { LocationCard } from './LocationCard';\nimport { MarketAnalysisCard } from './MarketAnalysisCard';\nimport { CompetitorAnalysisCard } from './CompetitorAnalysisCard';\nimport CustomReportLayoutManager, { ReportLayout } from './CustomReportLayoutManager';\nimport { useSharedState } from '@/components/shared/SharedStateProvider';\nimport { restaurantDataService, Restaurant } from '@/services/restaurant-data-service';\nimport { GeoPoint } from '@/lib/geospatial-analysis';\nimport { Card, CardHeader, CardContent } from '../ui/card';\nimport { Loader2 } from 'lucide-react';\n\n// Performance optimized loading component\nconst LoadingFallback = () => (\n  <Card className=\"w-full\">\n    <CardContent className=\"flex items-center justify-center py-8\">\n      <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\n      <span className=\"text-sm text-gray-600\">Loading component...</span>\n    </CardContent>\n  </Card>\n);\n\nexport interface GenerativeUIProps {\n  type: 'location' | 'market_analysis' | 'competitor_analysis' | 'demographic_data' | 'revenue_projection' | 'custom_report';\n  data: any;\n  onApprove?: (data: any) => void;\n  onReject?: () => void;\n  onRequestMore?: () => void;\n  messageId?: string;\n  showActions?: boolean;\n  layoutConfig?: ReportLayout;\n}\n\nexport function GenerativeUIManager({ \n  type, \n  data, \n  onApprove, \n  onReject, \n  onRequestMore,\n  messageId,\n  showActions = true,\n  layoutConfig \n}: GenerativeUIProps) {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const { \n    addMarker, \n    addRestaurant, \n    conductMarketAnalysis, \n    generateLocationInsights,\n    generateCompetitorAnalysis,\n    generateRevenueProjection \n  } = useSharedState();\n\n  const handleApprove = useCallback(async (approvedData: any) => {\n    setIsProcessing(true);\n    try {\n      if (onApprove) {\n        await onApprove(approvedData);\n      }\n      \n      // Auto-trigger related analyses using real data\n      if (type === 'location' && approvedData.coordinates) {\n        setTimeout(async () => {\n          try {\n            // Fetch real market analysis data\n            const nearbyRestaurants = await restaurantDataService.fetchRestaurants({\n              location: approvedData.coordinates,\n              radius: 1, // 1km radius\n              limit: 20\n            });\n\n            const analysis = await conductMarketAnalysis(\n              approvedData.coordinates, \n              1000,\n              { \n                cuisineType: approvedData.cuisine,\n                restaurantType: approvedData.type\n              }\n            );\n            console.log('Auto-generated market analysis with real data:', analysis);\n          } catch (error) {\n            console.error('Failed to auto-generate market analysis:', error);\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Failed to approve data:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [onApprove, type, conductMarketAnalysis]);\n\n  const handleReject = useCallback(() => {\n    if (onReject) {\n      onReject();\n    }\n  }, [onReject]);\n\n  const handleRequestMore = useCallback(async () => {\n    if (onRequestMore) {\n      onRequestMore();\n    }\n\n    // Generate additional insights based on type using real data\n    if (type === 'location' && data.coordinates) {\n      try {\n        // Fetch detailed restaurant and menu data\n        const restaurantData = await restaurantDataService.fetchRestaurants({\n          location: data.coordinates,\n          radius: 0.5, // 500m for detailed analysis\n          limit: 10\n        });\n\n        const insights = await generateLocationInsights(data.coordinates);\n        console.log('Generated additional insights with real data:', insights);\n      } catch (error) {\n        console.error('Failed to generate additional insights:', error);\n      }\n    }\n  }, [onRequestMore, type, data, generateLocationInsights]);\n\n  // Render the appropriate component based on type with optimized loading\n  switch (type) {\n    case 'location':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <LocationCard\n            location={data}\n            onApprove={handleApprove}\n            onReject={handleReject}\n            onRequestMoreInfo={handleRequestMore}\n            showActions={showActions && !isProcessing}\n          />\n        </Suspense>\n      );\n\n    case 'market_analysis':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <MarketAnalysisCard\n            analysis={data}\n            onApprove={handleApprove}\n            onReject={handleReject}\n            onRequestDetails={handleRequestMore}\n            showActions={showActions && !isProcessing}\n          />\n        </Suspense>\n      );\n\n    case 'competitor_analysis':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <CompetitorAnalysisCard\n            analysis={data}\n            onApprove={handleApprove}\n            onReject={handleReject}\n            onViewDetails={handleRequestMore}\n            showActions={showActions && !isProcessing}\n          />\n        </Suspense>\n      );\n\n    case 'demographic_data':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <DemographicDataCard\n            data={data}\n            onApprove={handleApprove}\n            onReject={handleReject}\n            onViewDetails={handleRequestMore}\n            showActions={showActions && !isProcessing}\n          />\n        </Suspense>\n      );\n\n    case 'revenue_projection':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <RevenueProjectionCard\n            projection={data}\n            onApprove={handleApprove}\n            onReject={handleReject}\n            onViewDetails={handleRequestMore}\n            showActions={showActions && !isProcessing}\n          />\n        </Suspense>\n      );\n\n    case 'custom_report':\n      return (\n        <Suspense fallback={<LoadingFallback />}>\n          <CustomReportLayoutManager\n            reportId={messageId || `report-${Date.now()}`}\n            initialLayout={layoutConfig}\n            onLayoutChange={(layout) => {\n              console.log('Layout changed:', layout);\n            }}\n            onSave={(layout) => {\n              console.log('Layout saved:', layout);\n              if (onApprove) {\n                onApprove({ layout, reportData: data });\n              }\n            }}\n            className=\"w-full\"\n          />\n        </Suspense>\n      );\n\n    default:\n      return (\n        <div className=\"p-4 border border-gray-200 rounded-lg bg-gray-50\">\n          <p className=\"text-gray-600\">Unknown component type: {type}</p>\n          <pre className=\"text-xs text-gray-500 mt-2 overflow-auto\">\n            {JSON.stringify(data, null, 2)}\n          </pre>\n        </div>\n      );\n  }\n}\n\n// Placeholder components for other types (to be implemented)\nfunction DemographicDataCard({ data, onApprove, onReject, onViewDetails, showActions }: any) {\n  return (\n    <div className=\"p-4 border border-purple-200 rounded-lg bg-purple-50\">\n      <h3 className=\"font-semibold text-purple-800 mb-2\">Demographic Data</h3>\n      <p className=\"text-purple-700 text-sm mb-3\">\n        Population: {data.population?.toLocaleString() || 'N/A'} • \n        Avg Income: ${data.avgIncome?.toLocaleString() || 'N/A'}\n      </p>\n      {showActions && (\n        <div className=\"flex gap-2\">\n          <button \n            onClick={() => onApprove(data)}\n            className=\"px-3 py-1 bg-purple-600 text-white rounded text-sm\"\n          >\n            Add to Analysis\n          </button>\n          <button \n            onClick={onViewDetails}\n            className=\"px-3 py-1 border border-purple-300 rounded text-sm\"\n          >\n            View Details\n          </button>\n          <button \n            onClick={onReject}\n            className=\"px-3 py-1 border border-red-300 text-red-600 rounded text-sm\"\n          >\n            Reject\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction RevenueProjectionCard({ projection, onApprove, onReject, onViewDetails, showActions }: any) {\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"p-4 border border-green-200 rounded-lg bg-green-50\">\n      <h3 className=\"font-semibold text-green-800 mb-2\">Revenue Projection</h3>\n      <div className=\"space-y-2 mb-3\">\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-green-700\">Conservative:</span>\n          <span className=\"font-medium\">{formatCurrency(projection.conservative || 0)}</span>\n        </div>\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-green-700\">Realistic:</span>\n          <span className=\"font-medium\">{formatCurrency(projection.realistic || 0)}</span>\n        </div>\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-green-700\">Optimistic:</span>\n          <span className=\"font-medium\">{formatCurrency(projection.optimistic || 0)}</span>\n        </div>\n      </div>\n      {showActions && (\n        <div className=\"flex gap-2\">\n          <button \n            onClick={() => onApprove(projection)}\n            className=\"px-3 py-1 bg-green-600 text-white rounded text-sm\"\n          >\n            Use Projection\n          </button>\n          <button \n            onClick={onViewDetails}\n            className=\"px-3 py-1 border border-green-300 rounded text-sm\"\n          >\n            Full Report\n          </button>\n          <button \n            onClick={onReject}\n            className=\"px-3 py-1 border border-red-300 text-red-600 rounded text-sm\"\n          >\n            Reject\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Factory function to create generative UI components\nexport function createGenerativeUI(type: GenerativeUIProps['type'], data: any, options?: {\n  onApprove?: (data: any) => void;\n  onReject?: () => void;\n  onRequestMore?: () => void;\n  messageId?: string;\n  showActions?: boolean;\n}) {\n  return React.createElement(GenerativeUIManager, {\n    type,\n    data,\n    ...options,\n  });\n}\n\n// Helper function to generate location data from search queries using real data\nexport async function generateLocationFromQuery(query: string, coordinates?: { lat: number; lng: number }) {\n  try {\n    const searchLocation = coordinates || { lat: 13.7563, lng: 100.5018 }; // Default to Bangkok center\n\n    // Search for restaurants using real API\n    const restaurants = await restaurantDataService.searchRestaurants(query, searchLocation);\n    \n    if (restaurants.length > 0) {\n      const restaurant = restaurants[0];\n      \n      // Fetch menu data for additional insights\n      const menuData = await restaurantDataService.fetchRestaurantMenu(restaurant.id);\n      \n      return {\n        name: restaurant.name,\n        address: restaurant.address,\n        coordinates: restaurant.location,\n        type: 'restaurant' as const,\n        cuisine: restaurant.cuisineType[0]?.toLowerCase() || 'general',\n        priceRange: restaurant.priceRange,\n        rating: restaurant.rating,\n        reviewCount: restaurant.reviewCount,\n        capacity: menuData?.analytics.totalItems || 50, // Approximate capacity from menu size\n        averageSpend: Math.round(menuData?.analytics.averagePrice || 25),\n        footTraffic: {\n          level: restaurant.businessMetrics.footTraffic,\n          peakHours: ['12:00-14:00', '19:00-21:00'] // Standard restaurant hours\n        },\n        insights: [\n          `${restaurant.businessMetrics.footTraffic.charAt(0).toUpperCase() + restaurant.businessMetrics.footTraffic.slice(1)} foot traffic location`,\n          `${restaurant.rating}/5 rating with ${restaurant.reviewCount} reviews`,\n          menuData ? `Menu offers ${menuData.analytics.totalItems} items` : \"Menu information available\",\n          `Competitive score: ${restaurant.businessMetrics.competitiveScore}/100`\n        ],\n        opportunityScore: restaurant.businessMetrics.competitiveScore,\n        menuData: menuData\n      };\n    }\n\n    // If no restaurants found, return potential site analysis\n    return {\n      name: \"Potential Restaurant Site\",\n      address: \"Location analysis based on search area\",\n      coordinates: searchLocation,\n      type: 'potential_site' as const,\n      demographics: {\n        population: \"Analysis pending\",\n        avgIncome: \"Data loading...\",\n        ageGroup: \"Demographics analysis in progress\"\n      },\n      insights: [\n        \"Real-time location analysis in progress\",\n        \"Fetching competitive landscape data\",\n        \"Analyzing demographic and traffic patterns\",\n        \"Market opportunity assessment underway\"\n      ],\n      opportunityScore: 75 // Conservative estimate\n    };\n\n  } catch (error) {\n    console.error('Failed to generate location from query:', error);\n    \n    // Fallback to basic analysis\n    return {\n      name: \"Location Analysis\",\n      address: \"Data temporarily unavailable\",\n      coordinates: coordinates || { lat: 13.7563, lng: 100.5018 },\n      type: 'potential_site' as const,\n      insights: [\n        \"Location data service temporarily unavailable\",\n        \"Please check your internet connection\",\n        \"Falling back to basic analysis mode\"\n      ],\n      opportunityScore: 50\n    };\n  }\n}\n\n// Helper function to generate market analysis data using real restaurant data\nexport async function generateMarketAnalysisFromLocation(location: { lat: number; lng: number }, options?: any) {\n  try {\n    // Fetch real restaurant data for market analysis\n    const nearbyRestaurants = await restaurantDataService.fetchRestaurants({\n      location,\n      radius: (options?.radius || 1000) / 1000, // Convert meters to km\n      limit: 50\n    });\n\n    const competitors = restaurantDataService.toCompetitorInfo(nearbyRestaurants);\n    \n    // Calculate market metrics from real data\n    const cuisineTypes = nearbyRestaurants.flatMap(r => r.cuisineType);\n    const cuisineCounts = cuisineTypes.reduce((acc, cuisine) => {\n      acc[cuisine] = (acc[cuisine] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const avgRating = nearbyRestaurants.reduce((sum, r) => sum + r.rating, 0) / nearbyRestaurants.length;\n    const avgPriceLevel = nearbyRestaurants.filter(r => r.priceRange).length;\n    \n    // Determine market saturation based on competitor density\n    const area = Math.PI * Math.pow((options?.radius || 1000) / 1000, 2); // km²\n    const competitorDensity = nearbyRestaurants.length / area;\n    \n    let marketSaturation: 'low' | 'medium' | 'high';\n    if (competitorDensity < 5) marketSaturation = 'low';\n    else if (competitorDensity < 15) marketSaturation = 'medium';\n    else marketSaturation = 'high';\n\n    // Find underrepresented cuisines\n    const popularCuisines = Object.entries(cuisineCounts)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 5)\n      .map(([cuisine]) => cuisine);\n\n    const allCuisines = ['Italian', 'Mexican', 'Asian', 'American', 'Thai', 'Japanese', 'Indian'];\n    const recommendedCuisines = allCuisines.filter(cuisine => \n      !popularCuisines.includes(cuisine.toLowerCase())\n    ).slice(0, 4);\n\n    // Calculate opportunity score based on real data\n    const baseScore = 100;\n    const competitionPenalty = Math.min(nearbyRestaurants.length * 2, 40);\n    const qualityBonus = avgRating > 4.0 ? 10 : 0;\n    const diversityBonus = recommendedCuisines.length > 2 ? 15 : 0;\n    \n    const opportunityScore = Math.max(20, baseScore - competitionPenalty + qualityBonus + diversityBonus);\n\n    // Generate revenue projections based on market data\n    const avgCapacity = 80; // Standard restaurant capacity\n    const avgSpend = nearbyRestaurants.reduce((sum, r) => sum + (r.businessMetrics.competitiveScore || 25), 0) / nearbyRestaurants.length;\n    const dailyCoverage = marketSaturation === 'low' ? 2.5 : marketSaturation === 'medium' ? 2.0 : 1.5;\n    \n    const dailyRevenue = avgCapacity * dailyCoverage * avgSpend;\n    const monthlyRevenue = dailyRevenue * 30;\n    const annualRevenue = monthlyRevenue * 12;\n\n    return {\n      location,\n      locationName: options?.locationName || \"Selected Location\",\n      radius: options?.radius || 1000,\n      competitorCount: nearbyRestaurants.length,\n      marketSaturation,\n      opportunityScore: Math.round(opportunityScore),\n      recommendedCuisines: recommendedCuisines.map(c => c.toLowerCase()),\n      recommendedPriceRange: avgPriceLevel > 15 ? '$$$' as const : '$$' as const,\n      estimatedRevenue: {\n        conservative: Math.round(annualRevenue * 0.7),\n        realistic: Math.round(annualRevenue),\n        optimistic: Math.round(annualRevenue * 1.4),\n      },\n      riskFactors: [\n        marketSaturation === 'high' ? \"High competition density in the area\" : \"Moderate competition level\",\n        \"Market entry requires strong differentiation strategy\",\n        nearbyRestaurants.some(r => r.rating > 4.5) ? \"High-quality competitors present\" : \"Standard competition quality\"\n      ],\n      strengths: [\n        `${nearbyRestaurants.length} existing restaurants validate market demand`,\n        recommendedCuisines.length > 0 ? `Opportunity in ${recommendedCuisines.join(', ')} cuisines` : \"Established market with proven demand\",\n        avgRating < 4.0 ? \"Room for quality improvement in market\" : \"Market shows strong quality standards\"\n      ],\n      insights: [\n        `Market analysis shows ${marketSaturation} competition density`,\n        recommendedCuisines.length > 0 ? `${recommendedCuisines.join(' and ')} cuisines show lowest competition` : \"Market is well-established across cuisine types\",\n        `Average market rating is ${avgRating.toFixed(1)}/5.0`,\n        competitorDensity < 10 ? \"Market has room for new entrants\" : \"Market requires strong positioning strategy\"\n      ],\n      demographics: {\n        totalPopulation: Math.round(8500 + (nearbyRestaurants.length * 100)), // Estimate based on restaurant density\n        avgIncome: 45000 + (opportunityScore * 500), // Correlate income with opportunity\n        primaryAgeGroup: \"25-45 years\"\n      },\n      competitorData: competitors.slice(0, 10), // Top 10 competitors\n      menuAnalytics: await Promise.all(\n        nearbyRestaurants.slice(0, 5).map(async (restaurant) => {\n          try {\n            const menu = await restaurantDataService.fetchRestaurantMenu(restaurant.id);\n            return {\n              restaurantName: restaurant.name,\n              menuData: menu\n            };\n          } catch (error) {\n            return null;\n          }\n        })\n      ).then(results => results.filter(Boolean))\n    };\n\n  } catch (error) {\n    console.error('Failed to generate market analysis:', error);\n    \n    // Fallback to basic analysis\n    return {\n      location,\n      locationName: options?.locationName || \"Selected Location\", \n      radius: options?.radius || 1000,\n      competitorCount: 0,\n      marketSaturation: 'medium' as const,\n      opportunityScore: 60,\n      recommendedCuisines: ['italian', 'mexican', 'asian'],\n      recommendedPriceRange: '$$' as const,\n      estimatedRevenue: {\n        conservative: 150000,\n        realistic: 220000,\n        optimistic: 300000,\n      },\n      riskFactors: [\n        \"Market data temporarily unavailable\",\n        \"Analysis based on general market indicators\"\n      ],\n      strengths: [\n        \"Location selected for analysis\",\n        \"Basic demographic indicators positive\"\n      ],\n      insights: [\n        \"Real-time market data service temporarily unavailable\", \n        \"Fallback analysis suggests moderate opportunity\",\n        \"Detailed analysis available once data service is restored\"\n      ],\n      demographics: {\n        totalPopulation: 8500,\n        avgIncome: 55000,\n        primaryAgeGroup: \"25-40 years\"\n      }\n    };\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}