{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/shared/SharedStateProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, useCallback, useRef } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Enhanced types for professional-grade restaurant market research\ntype MarkerType = \"location\" | \"poi\" | \"business\" | \"route\" | \"custom\" | \"restaurant\" | \"cafe\" | \"competitor\" | \"demographic\" | \"hotspot\" | \"market_gap\" | \"delivery_zone\";\ntype LayerType = \"markers\" | \"routes\" | \"heatmap\" | \"clusters\" | \"custom\" | \"foot_traffic\" | \"demographics\" | \"competitors\" | \"revenue_zones\" | \"delivery_hotspots\" | \"market_saturation\" | \"price_comparison\";\ntype ActionType = \"add_marker\" | \"remove_marker\" | \"update_marker\" | \"zoom\" | \"pan\" | \"select\" | \"clear\" | \"generate_component\" | \"update_layer\" | \"analyze_market\" | \"generate_report\" | \"competitor_analysis\" | \"hotspot_analysis\" | \"price_benchmarking\" | \"customer_segmentation\";\n\n// Professional restaurant analytics types\ntype CuisineType = \"american\" | \"italian\" | \"mexican\" | \"asian\" | \"mediterranean\" | \"french\" | \"indian\" | \"chinese\" | \"japanese\" | \"thai\" | \"vietnamese\" | \"korean\" | \"middle_eastern\" | \"fusion\" | \"vegan\" | \"organic\" | \"bbq\" | \"seafood\" | \"steakhouse\" | \"pizza\" | \"sushi\" | \"other\";\ntype RestaurantType = \"fast_food\" | \"casual_dining\" | \"fine_dining\" | \"cafe\" | \"bakery\" | \"bar\" | \"food_truck\" | \"buffet\" | \"catering\" | \"ghost_kitchen\" | \"cloud_kitchen\" | \"pop_up\" | \"franchise\" | \"chain\";\ntype DemographicSegment = \"young_professionals\" | \"families\" | \"students\" | \"seniors\" | \"tourists\" | \"locals\" | \"millennials\" | \"gen_z\" | \"high_income\" | \"middle_income\" | \"budget_conscious\";\ntype PriceRange = \"$\" | \"$$\" | \"$$$\" | \"$$$$\" | \"$$$$$\";\ntype BusinessDayPart = \"breakfast\" | \"brunch\" | \"lunch\" | \"afternoon\" | \"dinner\" | \"late_night\";\ntype MarketingChannel = \"google_ads\" | \"facebook_ads\" | \"instagram\" | \"email\" | \"sms\" | \"loyalty_program\" | \"word_of_mouth\" | \"delivery_apps\" | \"local_partnerships\";\ntype CustomerSegment = \"new_customers\" | \"regular_customers\" | \"vip_customers\" | \"at_risk_customers\" | \"champions\" | \"loyalists\" | \"potential_loyalists\" | \"cannot_lose_them\";\n\nexport interface RestaurantData {\n  id: string;\n  name: string;\n  type: RestaurantType;\n  cuisine: CuisineType;\n  priceRange: PriceRange;\n  averageSpend: number;\n  capacity: number;\n  operatingHours: {\n    monday: { open: string; close: string; isOpen: boolean; };\n    tuesday: { open: string; close: string; isOpen: boolean; };\n    wednesday: { open: string; close: string; isOpen: boolean; };\n    thursday: { open: string; close: string; isOpen: boolean; };\n    friday: { open: string; close: string; isOpen: boolean; };\n    saturday: { open: string; close: string; isOpen: boolean; };\n    sunday: { open: string; close: string; isOpen: boolean; };\n  };\n  coordinates: { lat: number; lng: number; };\n  address: string;\n  phone?: string;\n  website?: string;\n  rating: number;\n  reviewCount: number;\n  isCompetitor: boolean;\n  competitorThreatLevel?: \"low\" | \"medium\" | \"high\" | \"critical\";\n  marketShare?: number; // percentage of local market\n  distanceFromUser?: number; // in meters\n  establishedDate?: string;\n  footTraffic?: FootTrafficData;\n  revenue?: RevenueData;\n  demographics?: DemographicProfile;\n  marketingPresence?: MarketingPresenceData;\n  menuAnalysis?: MenuAnalysisData;\n  customerSentiment?: SentimentData;\n  deliveryCapabilities?: DeliveryData;\n  businessMetrics?: BusinessMetricsData;\n}\n\ninterface FootTrafficData {\n  hourly: { [hour: string]: number };\n  daily: { [day: string]: number };\n  seasonal: { [month: string]: number };\n  peakHours: string[];\n  averageDwellTime: number; // in minutes\n  totalVisitors: number;\n  uniqueVisitors: number;\n  repeatVisitorRate: number; // percentage\n}\n\nexport interface DemographicProfile {\n  id: string;\n  coordinates: { lat: number; lng: number; };\n  radius: number; // in meters\n  population: number;\n  ageGroups: {\n    \"18-25\": number;\n    \"26-35\": number;\n    \"36-45\": number;\n    \"46-55\": number;\n    \"56-65\": number;\n    \"65+\": number;\n  };\n  incomeRanges: {\n    \"under_30k\": number;\n    \"30k_50k\": number;\n    \"50k_75k\": number;\n    \"75k_100k\": number;\n    \"100k_150k\": number;\n    \"over_150k\": number;\n  };\n  lifestyleSegments: {\n    [key in DemographicSegment]: number;\n  };\n  diningFrequency: {\n    daily: number;\n    weekly: number;\n    monthly: number;\n    occasionally: number;\n  };\n  spendingPower: number; // average disposable income\n  educationLevel: {\n    \"high_school\": number;\n    \"bachelor\": number;\n    \"master\": number;\n    \"phd\": number;\n  };\n}\n\n// Keep original DemographicData for backward compatibility\ninterface DemographicData {\n  id: string;\n  coordinates: { lat: number; lng: number; };\n  radius: number; // in meters\n  population: number;\n  ageGroups: {\n    \"18-25\": number;\n    \"26-35\": number;\n    \"36-45\": number;\n    \"46-55\": number;\n    \"56-65\": number;\n    \"65+\": number;\n  };\n  incomeRanges: {\n    \"under_30k\": number;\n    \"30k_50k\": number;\n    \"50k_75k\": number;\n    \"75k_100k\": number;\n    \"100k_150k\": number;\n    \"over_150k\": number;\n  };\n  lifestyleSegments: {\n    [key in DemographicSegment]: number;\n  };\n  diningFrequency: {\n    daily: number;\n    weekly: number;\n    monthly: number;\n    occasionally: number;\n  };\n}\n\ninterface RevenueData {\n  monthlyRevenue: { [month: string]: number };\n  dailyAverage: number;\n  projectedAnnual: number;\n  costStructure: {\n    food: number;\n    labor: number;\n    rent: number;\n    utilities: number;\n    marketing: number;\n    other: number;\n  };\n  profitMargin: number;\n  // Enhanced revenue analytics\n  daily: { [date: string]: number };\n  monthly: { [month: string]: number };\n  seasonal: { [season: string]: number };\n  totalRevenue: number;\n  averageOrderValue: number;\n  peakRevenueHours: string[];\n  revenueByDayPart: { [key in BusinessDayPart]: number };\n  revenueGrowthRate: number; // percentage\n  costOfGoodsSold: number;\n  operatingExpenses: number;\n  netProfit: number;\n  breakEvenPoint: number; // orders per day\n}\n\ninterface MarketingPresenceData {\n  onlinePresence: {\n    website: boolean;\n    googleMyBusiness: boolean;\n    socialMedia: {\n      facebook: boolean;\n      instagram: boolean;\n      twitter: boolean;\n      tiktok: boolean;\n    };\n    deliveryApps: string[];\n  };\n  marketingChannels: {\n    [key in MarketingChannel]: {\n      active: boolean;\n      budget?: number;\n      roi?: number;\n      reach?: number;\n    };\n  };\n  brandRecognition: number; // score 0-100\n  localMarketShare: number; // percentage\n}\n\ninterface MenuAnalysisData {\n  totalItems: number;\n  categories: string[];\n  priceRange: {\n    min: number;\n    max: number;\n    average: number;\n  };\n  popularItems: {\n    name: string;\n    category: string;\n    price: number;\n    salesVolume: number;\n    profitMargin: number;\n  }[];\n  menuEngineering: {\n    stars: number; // high profit, high popularity\n    plowhorses: number; // low profit, high popularity\n    puzzles: number; // high profit, low popularity\n    dogs: number; // low profit, low popularity\n  };\n  cuisineComplexity: \"simple\" | \"moderate\" | \"complex\";\n  healthyOptions: number;\n  vegetarianOptions: number;\n  veganOptions: number;\n  glutenFreeOptions: number;\n}\n\ninterface SentimentData {\n  overallSentiment: \"positive\" | \"neutral\" | \"negative\";\n  sentimentScore: number; // -1 to 1\n  totalReviews: number;\n  recentReviews: {\n    date: string;\n    rating: number;\n    sentiment: \"positive\" | \"neutral\" | \"negative\";\n    text: string;\n    source: string;\n  }[];\n  keywordAnalysis: {\n    positive: string[];\n    negative: string[];\n    neutral: string[];\n  };\n  aspectSentiments: {\n    food: number;\n    service: number;\n    ambiance: number;\n    value: number;\n    cleanliness: number;\n  };\n  trendingTopics: string[];\n  competitorComparisons: {\n    betterThan: string[];\n    worseThan: string[];\n  };\n}\n\ninterface DeliveryData {\n  hasDelivery: boolean;\n  deliveryZones: {\n    coordinates: { lat: number; lng: number; }[];\n    deliveryTime: number; // minutes\n    deliveryFee: number;\n  }[];\n  deliveryPartners: string[];\n  averageDeliveryTime: number;\n  deliveryRating: number;\n  deliveryVolume: number; // orders per day\n  deliveryHotspots: {\n    coordinates: { lat: number; lng: number; };\n    orderCount: number;\n    averageOrderValue: number;\n    customerSegment: CustomerSegment;\n  }[];\n}\n\ninterface BusinessMetricsData {\n  customerAcquisitionCost: number;\n  customerLifetimeValue: number;\n  customerRetentionRate: number; // percentage\n  averageOrderFrequency: number; // orders per month\n  seasonalityIndex: number; // variance coefficient\n  marketPosition: \"leader\" | \"challenger\" | \"follower\" | \"niche\";\n  competitiveAdvantages: string[];\n  weaknesses: string[];\n  opportunities: string[];\n  threats: string[];\n  swotScore: number; // overall SWOT analysis score\n}\n\nexport interface MarketAnalysis {\n  id: string;\n  timestamp: Date;\n  location: { lat: number; lng: number; };\n  radius: number;\n  competitorCount: number;\n  marketSaturation: \"low\" | \"medium\" | \"high\";\n  opportunityScore: number; // 0-100\n  recommendedCuisines: CuisineType[];\n  recommendedPriceRange: \"$\" | \"$$\" | \"$$$\" | \"$$$$\";\n  estimatedRevenue: {\n    conservative: number;\n    optimistic: number;\n    realistic: number;\n  };\n  riskFactors: string[];\n  strengths: string[];\n  insights: string[];\n}\n\ninterface Marker {\n  id: string;\n  type: MarkerType;\n  position: { lat: number; lng: number };\n  title: string;\n  description?: string;\n  selected: boolean;\n  properties?: Record<string, any>;\n  component?: React.ComponentType<any>;\n  style?: Record<string, any>;\n}\n\ninterface MapLayer {\n  id: string;\n  type: LayerType;\n  visible: boolean;\n  data: any[];\n  style?: Record<string, any>;\n  component?: React.ComponentType<any>;\n}\n\ninterface ActionHistory {\n  id: string;\n  type: ActionType;\n  timestamp: Date;\n  data: any;\n  description: string;\n}\n\ninterface GenerativeUICommand {\n  id: string;\n  command: string;\n  parameters: Record<string, any>;\n  timestamp: Date;\n  status: 'pending' | 'executing' | 'completed' | 'failed';\n  result?: any;\n}\n\nexport interface MapState {\n  // Core map state\n  zoom: number;\n  center: { lat: number; lng: number };\n  bounds?: { north: number; south: number; east: number; west: number };\n  \n  // Enhanced marker system\n  markers: Marker[];\n  selectedMarkerId: string | null;\n  \n  // Layer management\n  layers: MapLayer[];\n  activeLayers: string[];\n  \n  // Interaction modes\n  mode: \"explore\" | \"add\" | \"select\" | \"edit\" | \"route\" | \"measure\" | \"analyze\";\n  activeMarkerType: MarkerType | null;\n  \n  // Restaurant Research Data\n  restaurants: RestaurantData[];\n  demographics: DemographicData[];\n  marketAnalyses: MarketAnalysis[];\n  selectedRestaurantId: string | null;\n  selectedDemographicId: string | null;\n  \n  // Research Filters - Enhanced for professional analytics\n  researchFilters: {\n    cuisineTypes: CuisineType[];\n    restaurantTypes: RestaurantType[];\n    priceRanges: PriceRange[];\n    radius: number; // in kilometers\n    showCompetitors: boolean;\n    showDemographics: boolean;\n    showFootTraffic: boolean;\n    showRevenueZones: boolean;\n    showDeliveryHotspots: boolean;\n    showMarketGaps: boolean;\n    showPriceComparison: boolean;\n    competitorThreatLevel: (\"low\" | \"medium\" | \"high\" | \"critical\")[];\n    marketPosition: (\"leader\" | \"challenger\" | \"follower\" | \"niche\")[];\n    minimumRating: number;\n    maximumDistance: number; // in meters\n    dayPartFilter: BusinessDayPart[];\n    customerSegmentFilter: CustomerSegment[];\n  };\n  \n  // Advanced Analytics Layers\n  analyticsLayers: {\n    hotspotAnalysis: {\n      enabled: boolean;\n      type: \"delivery\" | \"dine_in\" | \"revenue\" | \"profit\";\n      timeFrame: \"hourly\" | \"daily\" | \"weekly\" | \"monthly\";\n      statisticalSignificance: number; // p-value threshold\n      zScoreThreshold: number;\n      gridSize: number; // for spatial aggregation\n    };\n    competitiveAnalysis: {\n      enabled: boolean;\n      showThreatLevels: boolean;\n      showMarketShare: boolean;\n      proximityRadius: number;\n      benchmarkMetrics: (\"price\" | \"rating\" | \"volume\" | \"sentiment\")[];\n    };\n    customerFlow: {\n      enabled: boolean;\n      showOriginDestination: boolean;\n      timeOfDay: string[];\n      dayOfWeek: string[];\n      animationSpeed: number;\n    };\n    marketSaturation: {\n      enabled: boolean;\n      saturationThreshold: number;\n      gridResolution: number;\n      colorScheme: \"viridis\" | \"plasma\" | \"inferno\" | \"magma\";\n    };\n    priceMapping: {\n      enabled: boolean;\n      showPriceRange: boolean;\n      showPriceDisparity: boolean;\n      normalizeByCuisine: boolean;\n    };\n  };\n  \n  // Buffer Radius Visualization\n  bufferRadius: number; // radius in meters\n  showBufferRadius: boolean;\n  bufferCenter: { lat: number; lng: number } | null;\n  bufferOpacity: number; // 0-1 for circle opacity\n  \n  // Analysis State\n  currentAnalysis: MarketAnalysis | null;\n  isAnalyzing: boolean;\n  analysisProgress: number; // 0-100\n  \n  // State synchronization\n  isSyncing: boolean;\n  lastSyncTime: Date | null;\n  \n  // Action history for undo/redo\n  history: ActionHistory[];\n  historyIndex: number;\n  \n  // Generative UI system\n  pendingCommands: GenerativeUICommand[];\n  componentRegistry: Map<string, React.ComponentType<any>>;\n  \n  // Real-time features\n  isRealTimeEnabled: boolean;\n  connectionStatus: 'connected' | 'disconnected' | 'reconnecting';\n}\n\ninterface SharedStateContextType {\n  // State\n  mapState: MapState;\n  \n  // Core map operations\n  updateZoom: (zoom: number) => void;\n  updateCenter: (center: { lat: number; lng: number }) => void;\n  updateBounds: (bounds: { north: number; south: number; east: number; west: number }) => void;\n  \n  // Enhanced marker operations\n  addMarker: (marker: Omit<Marker, \"id\" | \"selected\">) => Promise<string>;\n  updateMarker: (id: string, updates: Partial<Marker>) => void;\n  removeMarker: (id: string) => void;\n  selectMarker: (id: string) => void;\n  clearMarkers: () => void;\n  bulkAddMarkers: (markers: Omit<Marker, \"id\" | \"selected\">[]) => Promise<string[]>;\n  \n  // Layer management\n  addLayer: (layer: Omit<MapLayer, \"id\">) => string;\n  updateLayer: (id: string, updates: Partial<MapLayer>) => void;\n  removeLayer: (id: string) => void;\n  toggleLayer: (id: string) => void;\n  \n  // Mode and interaction\n  setMode: (mode: MapState[\"mode\"]) => void;\n  setActiveMarkerType: (type: MarkerType | null) => void;\n  \n  // Generative UI system\n  executeCommand: (command: string, parameters?: Record<string, any>) => Promise<any>;\n  registerComponent: (name: string, component: React.ComponentType<any>) => void;\n  generateComponent: (description: string, props?: Record<string, any>) => Promise<React.ComponentType<any>>;\n  \n  // Restaurant Research Functions\n  addRestaurant: (restaurant: Omit<RestaurantData, \"id\">) => Promise<string>;\n  updateRestaurant: (id: string, updates: Partial<RestaurantData>) => void;\n  removeRestaurant: (id: string) => void;\n  selectRestaurant: (id: string) => void;\n  getRestaurantsByType: (type: RestaurantType) => RestaurantData[];\n  getRestaurantsByCuisine: (cuisine: CuisineType) => RestaurantData[];\n  getCompetitors: (location: { lat: number; lng: number }, radius: number) => RestaurantData[];\n  \n  // Demographic Analysis\n  addDemographicData: (demographic: Omit<DemographicData, \"id\">) => Promise<string>;\n  updateDemographicData: (id: string, updates: Partial<DemographicData>) => void;\n  removeDemographicData: (id: string) => void;\n  selectDemographic: (id: string) => void;\n  getDemographicsInRadius: (location: { lat: number; lng: number }, radius: number) => DemographicData[];\n  \n  // Market Analysis\n  conductMarketAnalysis: (location: { lat: number; lng: number }, radius: number, options?: { cuisineType?: CuisineType; restaurantType?: RestaurantType }) => Promise<MarketAnalysis>;\n  updateMarketAnalysis: (id: string, updates: Partial<MarketAnalysis>) => void;\n  removeMarketAnalysis: (id: string) => void;\n  getLatestAnalysis: () => MarketAnalysis | null;\n  \n  // Research Filters\n  updateResearchFilters: (filters: Partial<MapState[\"researchFilters\"]>) => void;\n  resetResearchFilters: () => void;\n  \n  // AI-Powered Insights\n  generateLocationInsights: (location: { lat: number; lng: number }) => Promise<string[]>;\n  generateCompetitorAnalysis: (location: { lat: number; lng: number }, radius: number) => Promise<any>;\n  generateRevenueProjection: (restaurant: Partial<RestaurantData>, demographics: DemographicData[]) => Promise<RevenueData>;\n  generateOptimalPricing: (location: { lat: number; lng: number }, cuisine: CuisineType) => Promise<{ priceRange: string; reasoning: string }>;\n  \n  // Data Export/Import\n  exportRestaurantData: () => string;\n  importRestaurantData: (data: string) => void;\n  generateMarketReport: (analysisId: string) => Promise<{ pdf: Blob; insights: string[] }>;\n  \n  // History management\n  undo: () => void;\n  redo: () => void;\n  canUndo: () => boolean;\n  canRedo: () => boolean;\n  clearHistory: () => void;\n  \n  // Real-time synchronization\n  enableRealTime: () => void;\n  disableRealTime: () => void;\n  forceSync: () => Promise<void>;\n  \n  // Utility functions\n  setSyncing: (isSyncing: boolean) => void;\n  getMarkersByType: (type: MarkerType) => Marker[];\n  getMarkersInBounds: (bounds: { north: number; south: number; east: number; west: number }) => Marker[];\n  exportState: () => string;\n  importState: (state: string) => void;\n\n  // Buffer Radius Management\n  setBufferRadius: (radius: number) => void;\n  setBufferCenter: (center: { lat: number; lng: number } | null) => void;\n  toggleBufferRadius: () => void;\n  setBufferOpacity: (opacity: number) => void;\n}\n\nconst initialState: MapState = {\n  zoom: 12,\n  center: { lat: 13.7563, lng: 100.5018 }, // Bangkok coordinates\n  markers: [\n    {\n      id: \"bkk-1\",\n      type: \"location\",\n      position: { lat: 13.7563, lng: 100.5018 },\n      title: \"Bangkok\",\n      description: \"The vibrant capital of Thailand\",\n      selected: false,\n    },\n    {\n      id: \"bkk-2\",\n      type: \"poi\",\n      position: { lat: 37.8059, lng: -122.4103 },\n      title: \"North Beach\",\n      description: \"Historic Italian neighborhood\",\n      selected: false,\n    },\n  ],\n  selectedMarkerId: null,\n  layers: [],\n  activeLayers: [],\n  mode: \"explore\",\n  activeMarkerType: null,\n  \n  // Restaurant Research Data\n  restaurants: [\n    {\n      id: \"sample-restaurant-1\",\n      name: \"Bangkok Bistro\",\n      type: \"casual_dining\",\n      cuisine: \"thai\",\n      priceRange: \"$$\",\n      averageSpend: 25,\n      capacity: 80,\n      operatingHours: {\n        monday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n        tuesday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n        wednesday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n        thursday: { open: \"11:00\", close: \"22:00\", isOpen: true },\n        friday: { open: \"11:00\", close: \"23:00\", isOpen: true },\n        saturday: { open: \"11:00\", close: \"23:00\", isOpen: true },\n        sunday: { open: \"12:00\", close: \"21:00\", isOpen: true },\n      },\n      coordinates: { lat: 13.7563, lng: 100.5018 },\n      address: \"123 Sukhumvit Road, Bangkok 10110\",\n      phone: \"+66-2-123-4567\",\n      website: \"https://bangkokbistro.com\",\n      rating: 4.2,\n      reviewCount: 245,\n      isCompetitor: false,\n      competitorThreatLevel: \"low\",\n      marketShare: 12.5,\n      distanceFromUser: 0,\n      establishedDate: \"2019-06-15\",\n    }\n  ],\n  demographics: [\n    {\n      id: \"sample-demo-1\",\n      coordinates: { lat: 13.7563, lng: 100.5018 },\n      radius: 1000,\n      population: 8500,\n      ageGroups: {\n        \"18-25\": 1200,\n        \"26-35\": 2800,\n        \"36-45\": 2100,\n        \"46-55\": 1600,\n        \"56-65\": 500,\n        \"65+\": 300,\n      },\n      incomeRanges: {\n        \"under_30k\": 1500,\n        \"30k_50k\": 2200,\n        \"50k_75k\": 2600,\n        \"75k_100k\": 1400,\n        \"100k_150k\": 600,\n        \"over_150k\": 200,\n      },\n      lifestyleSegments: {\n        young_professionals: 3000,\n        families: 2500,\n        students: 1500,\n        seniors: 800,\n        tourists: 500,\n        locals: 7200,\n        millennials: 2800,\n        gen_z: 1200,\n        high_income: 1800,\n        middle_income: 4200,\n        budget_conscious: 2500,\n      },\n      diningFrequency: {\n        daily: 2000,\n        weekly: 4500,\n        monthly: 1500,\n        occasionally: 500,\n      },\n    }\n  ],\n  marketAnalyses: [],\n  selectedRestaurantId: null,\n  selectedDemographicId: null,\n  \n  // Research Filters - Enhanced\n  researchFilters: {\n    cuisineTypes: [],\n    restaurantTypes: [],\n    priceRanges: [],\n    radius: 2, // 2km default\n    showCompetitors: true,\n    showDemographics: true,\n    showFootTraffic: false,\n    showRevenueZones: false,\n    showDeliveryHotspots: false,\n    showMarketGaps: false,\n    showPriceComparison: false,\n    competitorThreatLevel: [\"low\", \"medium\", \"high\", \"critical\"],\n    marketPosition: [\"leader\", \"challenger\", \"follower\", \"niche\"],\n    minimumRating: 0,\n    maximumDistance: 5000, // 5km\n    dayPartFilter: [],\n    customerSegmentFilter: [],\n  },\n  \n  // Advanced Analytics Layers\n  analyticsLayers: {\n    hotspotAnalysis: {\n      enabled: false,\n      type: \"delivery\",\n      timeFrame: \"daily\",\n      statisticalSignificance: 0.05,\n      zScoreThreshold: 1.96,\n      gridSize: 100,\n    },\n    competitiveAnalysis: {\n      enabled: false,\n      showThreatLevels: true,\n      showMarketShare: true,\n      proximityRadius: 1000,\n      benchmarkMetrics: [\"price\", \"rating\"],\n    },\n    customerFlow: {\n      enabled: false,\n      showOriginDestination: false,\n      timeOfDay: [],\n      dayOfWeek: [],\n      animationSpeed: 1,\n    },\n    marketSaturation: {\n      enabled: false,\n      saturationThreshold: 0.7,\n      gridResolution: 50,\n      colorScheme: \"viridis\",\n    },\n    priceMapping: {\n      enabled: false,\n      showPriceRange: true,\n      showPriceDisparity: false,\n      normalizeByCuisine: true,\n    },\n  },\n  \n  // Buffer Radius Visualization\n  bufferRadius: 500, // 500 meters default\n  showBufferRadius: false,\n  bufferCenter: null,\n  bufferOpacity: 0.3,\n  \n  // Analysis State\n  currentAnalysis: null,\n  isAnalyzing: false,\n  analysisProgress: 0,\n  \n  isSyncing: false,\n  lastSyncTime: null,\n  history: [],\n  historyIndex: -1,\n  pendingCommands: [],\n  componentRegistry: new Map(),\n  isRealTimeEnabled: false,\n  connectionStatus: 'connected',\n};\n\nconst SharedStateContext = createContext<SharedStateContextType | undefined>(undefined);\n\nexport function SharedStateProvider({ children }: { children: React.ReactNode }) {\n  const [mapState, setMapState] = useState<MapState>(initialState);\n  const syncTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const commandQueueRef = useRef<GenerativeUICommand[]>([]);\n\n  // Enhanced sync mechanism with debouncing\n  const triggerSync = useCallback((immediate = false) => {\n    if (syncTimeoutRef.current) {\n      clearTimeout(syncTimeoutRef.current);\n    }\n\n    const syncFn = () => {\n      setMapState(prev => ({\n        ...prev,\n        isSyncing: true,\n        lastSyncTime: new Date(),\n      }));\n\n      // Simulate sync completion\n      setTimeout(() => {\n        setMapState(prev => ({ ...prev, isSyncing: false }));\n      }, immediate ? 300 : 1000);\n    };\n\n    if (immediate) {\n      syncFn();\n    } else {\n      syncTimeoutRef.current = setTimeout(syncFn, 100);\n    }\n  }, []);\n\n  // Action history management\n  const addToHistory = useCallback((action: Omit<ActionHistory, \"id\" | \"timestamp\">) => {\n    const historyItem: ActionHistory = {\n      id: uuidv4(),\n      timestamp: new Date(),\n      ...action,\n    };\n\n    setMapState(prev => {\n      const newHistory = prev.history.slice(0, prev.historyIndex + 1);\n      newHistory.push(historyItem);\n      \n      // Limit history size\n      if (newHistory.length > 100) {\n        newHistory.shift();\n      }\n\n      return {\n        ...prev,\n        history: newHistory,\n        historyIndex: newHistory.length - 1,\n      };\n    });\n  }, []);\n\n  // Core map operations\n  const updateZoom = useCallback((zoom: number) => {\n    setMapState(prev => ({ ...prev, zoom }));\n    addToHistory({ type: \"zoom\", data: { zoom }, description: `Zoomed to level ${zoom}` });\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const updateCenter = useCallback((center: { lat: number; lng: number }) => {\n    setMapState(prev => ({ ...prev, center }));\n    addToHistory({ type: \"pan\", data: { center }, description: `Moved to ${center.lat.toFixed(4)}, ${center.lng.toFixed(4)}` });\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const updateBounds = useCallback((bounds: { north: number; south: number; east: number; west: number }) => {\n    setMapState(prev => ({ ...prev, bounds }));\n    triggerSync();\n  }, [triggerSync]);\n\n  // Enhanced marker operations\n  const addMarker = useCallback(async (marker: Omit<Marker, \"id\" | \"selected\">): Promise<string> => {\n    const id = uuidv4();\n    const newMarker: Marker = { ...marker, id, selected: false };\n\n    setMapState(prev => ({\n      ...prev,\n      markers: [...prev.markers, newMarker],\n    }));\n\n    addToHistory({\n      type: \"add_marker\",\n      data: { marker: newMarker },\n      description: `Added ${marker.type} marker: ${marker.title}`,\n    });\n\n    triggerSync();\n    return id;\n  }, [addToHistory, triggerSync]);\n\n  const updateMarker = useCallback((id: string, updates: Partial<Marker>) => {\n    setMapState(prev => ({\n      ...prev,\n      markers: prev.markers.map(marker =>\n        marker.id === id ? { ...marker, ...updates } : marker\n      ),\n    }));\n\n    addToHistory({\n      type: \"update_marker\",\n      data: { id, updates },\n      description: `Updated marker ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const removeMarker = useCallback((id: string) => {\n    setMapState(prev => {\n      const marker = prev.markers.find(m => m.id === id);\n      return {\n        ...prev,\n        markers: prev.markers.filter(m => m.id !== id),\n        selectedMarkerId: prev.selectedMarkerId === id ? null : prev.selectedMarkerId,\n      };\n    });\n\n    addToHistory({\n      type: \"remove_marker\",\n      data: { id },\n      description: `Removed marker ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const selectMarker = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      markers: prev.markers.map(marker => ({\n        ...marker,\n        selected: marker.id === id,\n      })),\n      selectedMarkerId: id,\n    }));\n\n    addToHistory({\n      type: \"select\",\n      data: { id },\n      description: `Selected marker ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const clearMarkers = useCallback(() => {\n    setMapState(prev => ({\n      ...prev,\n      markers: [],\n      selectedMarkerId: null,\n    }));\n\n    addToHistory({\n      type: \"clear\",\n      data: {},\n      description: \"Cleared all markers\",\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const bulkAddMarkers = useCallback(async (markers: Omit<Marker, \"id\" | \"selected\">[]): Promise<string[]> => {\n    const newMarkers = markers.map(marker => ({\n      ...marker,\n      id: uuidv4(),\n      selected: false,\n    }));\n\n    setMapState(prev => ({\n      ...prev,\n      markers: [...prev.markers, ...newMarkers],\n    }));\n\n    addToHistory({\n      type: \"add_marker\",\n      data: { markers: newMarkers },\n      description: `Added ${markers.length} markers`,\n    });\n\n    triggerSync();\n    return newMarkers.map(m => m.id);\n  }, [addToHistory, triggerSync]);\n\n  // Layer management\n  const addLayer = useCallback((layer: Omit<MapLayer, \"id\">): string => {\n    const id = uuidv4();\n    const newLayer: MapLayer = { ...layer, id };\n\n    setMapState(prev => ({\n      ...prev,\n      layers: [...prev.layers, newLayer],\n      activeLayers: [...prev.activeLayers, id],\n    }));\n\n    triggerSync();\n    return id;\n  }, [triggerSync]);\n\n  const updateLayer = useCallback((id: string, updates: Partial<MapLayer>) => {\n    setMapState(prev => ({\n      ...prev,\n      layers: prev.layers.map(layer =>\n        layer.id === id ? { ...layer, ...updates } : layer\n      ),\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const removeLayer = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      layers: prev.layers.filter(layer => layer.id !== id),\n      activeLayers: prev.activeLayers.filter(layerId => layerId !== id),\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const toggleLayer = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      activeLayers: prev.activeLayers.includes(id)\n        ? prev.activeLayers.filter(layerId => layerId !== id)\n        : [...prev.activeLayers, id],\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  // Mode and interaction\n  const setMode = useCallback((mode: MapState[\"mode\"]) => {\n    setMapState(prev => ({ ...prev, mode }));\n    triggerSync();\n  }, [triggerSync]);\n\n  const setActiveMarkerType = useCallback((type: MarkerType | null) => {\n    setMapState(prev => ({ ...prev, activeMarkerType: type }));\n  }, []);\n\n  // Generative UI system\n  const executeCommand = useCallback(async (command: string, parameters: Record<string, any> = {}): Promise<any> => {\n    const commandId = uuidv4();\n    const generativeCommand: GenerativeUICommand = {\n      id: commandId,\n      command,\n      parameters,\n      timestamp: new Date(),\n      status: 'pending',\n    };\n\n    setMapState(prev => ({\n      ...prev,\n      pendingCommands: [...prev.pendingCommands, generativeCommand],\n    }));\n\n    try {\n      // Update status to executing\n      setMapState(prev => ({\n        ...prev,\n        pendingCommands: prev.pendingCommands.map(cmd =>\n          cmd.id === commandId ? { ...cmd, status: 'executing' } : cmd\n        ),\n      }));\n\n      // Execute command based on type\n      let result: any;\n      const lowerCommand = command.toLowerCase();\n\n      if (lowerCommand.includes('add') && lowerCommand.includes('marker')) {\n        const { lat, lng, title, type = 'location' } = parameters;\n        result = await addMarker({\n          type: type as MarkerType,\n          position: { lat: lat || mapState.center.lat, lng: lng || mapState.center.lng },\n          title: title || 'AI Generated Marker',\n          description: `Generated by AI command: ${command}`,\n        });\n      } else if (lowerCommand.includes('clear')) {\n        clearMarkers();\n        result = 'Markers cleared';\n      } else if (lowerCommand.includes('zoom')) {\n        const { level } = parameters;\n        updateZoom(level || mapState.zoom + 1);\n        result = `Zoomed to level ${level || mapState.zoom + 1}`;\n      } else if (lowerCommand.includes('center') || lowerCommand.includes('move')) {\n        const { lat, lng } = parameters;\n        updateCenter({ lat: lat || mapState.center.lat, lng: lng || mapState.center.lng });\n        result = `Moved to ${lat}, ${lng}`;\n      }\n\n      // Update status to completed\n      setMapState(prev => ({\n        ...prev,\n        pendingCommands: prev.pendingCommands.map(cmd =>\n          cmd.id === commandId ? { ...cmd, status: 'completed', result } : cmd\n        ),\n      }));\n\n      return result;\n    } catch (error) {\n      // Update status to failed\n      setMapState(prev => ({\n        ...prev,\n        pendingCommands: prev.pendingCommands.map(cmd =>\n          cmd.id === commandId ? { ...cmd, status: 'failed', result: error } : cmd\n        ),\n      }));\n\n      throw error;\n    }\n  }, [addMarker, clearMarkers, updateZoom, updateCenter, mapState.center, mapState.zoom]);\n\n  const registerComponent = useCallback((name: string, component: React.ComponentType<any>) => {\n    setMapState(prev => {\n      const newRegistry = new Map(prev.componentRegistry);\n      newRegistry.set(name, component);\n      return { ...prev, componentRegistry: newRegistry };\n    });\n  }, []);\n\n  const generateComponent = useCallback(async (description: string, props: Record<string, any> = {}): Promise<React.ComponentType<any>> => {\n    // This would integrate with an AI service to generate components\n    // For now, return a simple component\n    const GeneratedComponent: React.ComponentType<any> = (componentProps) => (\n      <div className=\"bg-blue-100 p-2 rounded border\">\n        <h4 className=\"font-semibold\">AI Generated: {description}</h4>\n        <pre className=\"text-xs\">{JSON.stringify({ ...props, ...componentProps }, null, 2)}</pre>\n      </div>\n    );\n\n    const componentName = `generated_${Date.now()}`;\n    registerComponent(componentName, GeneratedComponent);\n    \n    return GeneratedComponent;\n  }, [registerComponent]);\n\n  // History management\n  const undo = useCallback(() => {\n    if (mapState.historyIndex > 0) {\n      setMapState(prev => ({ ...prev, historyIndex: prev.historyIndex - 1 }));\n      // Apply undo logic here\n      triggerSync();\n    }\n  }, [mapState.historyIndex, triggerSync]);\n\n  const redo = useCallback(() => {\n    if (mapState.historyIndex < mapState.history.length - 1) {\n      setMapState(prev => ({ ...prev, historyIndex: prev.historyIndex + 1 }));\n      // Apply redo logic here\n      triggerSync();\n    }\n  }, [mapState.historyIndex, mapState.history.length, triggerSync]);\n\n  const canUndo = useCallback(() => mapState.historyIndex > 0, [mapState.historyIndex]);\n  const canRedo = useCallback(() => mapState.historyIndex < mapState.history.length - 1, [mapState.historyIndex, mapState.history.length]);\n\n  const clearHistory = useCallback(() => {\n    setMapState(prev => ({ ...prev, history: [], historyIndex: -1 }));\n  }, []);\n\n  // Real-time synchronization\n  const enableRealTime = useCallback(() => {\n    setMapState(prev => ({ ...prev, isRealTimeEnabled: true, connectionStatus: 'connected' }));\n  }, []);\n\n  const disableRealTime = useCallback(() => {\n    setMapState(prev => ({ ...prev, isRealTimeEnabled: false, connectionStatus: 'disconnected' }));\n  }, []);\n\n  const forceSync = useCallback(async () => {\n    triggerSync(true);\n  }, [triggerSync]);\n\n  // Utility functions\n  const setSyncing = useCallback((isSyncing: boolean) => {\n    setMapState(prev => ({ ...prev, isSyncing }));\n  }, []);\n\n  const getMarkersByType = useCallback((type: MarkerType) => {\n    return mapState.markers.filter(marker => marker.type === type);\n  }, [mapState.markers]);\n\n  const getMarkersInBounds = useCallback((bounds: { north: number; south: number; east: number; west: number }) => {\n    return mapState.markers.filter(marker => \n      marker.position.lat <= bounds.north &&\n      marker.position.lat >= bounds.south &&\n      marker.position.lng <= bounds.east &&\n      marker.position.lng >= bounds.west\n    );\n  }, [mapState.markers]);\n\n  const exportState = useCallback(() => {\n    return JSON.stringify({\n      ...mapState,\n      componentRegistry: Array.from(mapState.componentRegistry.entries()),\n    });\n  }, [mapState]);\n\n  const importState = useCallback((state: string) => {\n    try {\n      const parsed = JSON.parse(state);\n      const componentRegistry = new Map(parsed.componentRegistry || []);\n      setMapState({ ...parsed, componentRegistry });\n      triggerSync();\n    } catch (error) {\n      console.error('Failed to import state:', error);\n    }\n  }, [triggerSync]);\n\n  // Restaurant Research Functions\n  const addRestaurant = useCallback(async (restaurant: Omit<RestaurantData, \"id\">): Promise<string> => {\n    const id = uuidv4();\n    const newRestaurant: RestaurantData = { ...restaurant, id };\n\n    setMapState(prev => ({\n      ...prev,\n      restaurants: [...prev.restaurants, newRestaurant],\n    }));\n\n    addToHistory({\n      type: \"add_marker\",\n      data: { restaurant: newRestaurant },\n      description: `Added restaurant: ${restaurant.name}`,\n    });\n\n    triggerSync();\n    return id;\n  }, [addToHistory, triggerSync]);\n\n  const updateRestaurant = useCallback((id: string, updates: Partial<RestaurantData>) => {\n    setMapState(prev => ({\n      ...prev,\n      restaurants: prev.restaurants.map(restaurant =>\n        restaurant.id === id ? { ...restaurant, ...updates } : restaurant\n      ),\n    }));\n\n    addToHistory({\n      type: \"update_marker\",\n      data: { id, updates },\n      description: `Updated restaurant ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const removeRestaurant = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      restaurants: prev.restaurants.filter(r => r.id !== id),\n      selectedRestaurantId: prev.selectedRestaurantId === id ? null : prev.selectedRestaurantId,\n    }));\n\n    addToHistory({\n      type: \"remove_marker\",\n      data: { id },\n      description: `Removed restaurant ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const selectRestaurant = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      selectedRestaurantId: id,\n    }));\n\n    addToHistory({\n      type: \"select\",\n      data: { id },\n      description: `Selected restaurant ${id}`,\n    });\n\n    triggerSync();\n  }, [addToHistory, triggerSync]);\n\n  const getRestaurantsByType = useCallback((type: RestaurantType) => {\n    return mapState.restaurants.filter(restaurant => restaurant.type === type);\n  }, [mapState.restaurants]);\n\n  const getRestaurantsByCuisine = useCallback((cuisine: CuisineType) => {\n    return mapState.restaurants.filter(restaurant => restaurant.cuisine === cuisine);\n  }, [mapState.restaurants]);\n\n  const getCompetitors = useCallback((location: { lat: number; lng: number }, radius: number) => {\n    return mapState.restaurants.filter(restaurant => {\n      if (!restaurant.isCompetitor) return false;\n      const distance = Math.sqrt(\n        Math.pow(restaurant.coordinates.lat - location.lat, 2) + \n        Math.pow(restaurant.coordinates.lng - location.lng, 2)\n      ) * 111000; // Rough conversion to meters\n      return distance <= radius;\n    });\n  }, [mapState.restaurants]);\n\n  // Demographic Analysis Functions\n  const addDemographicData = useCallback(async (demographic: Omit<DemographicData, \"id\">): Promise<string> => {\n    const id = uuidv4();\n    const newDemographic: DemographicData = { ...demographic, id };\n\n    setMapState(prev => ({\n      ...prev,\n      demographics: [...prev.demographics, newDemographic],\n    }));\n\n    triggerSync();\n    return id;\n  }, [triggerSync]);\n\n  const updateDemographicData = useCallback((id: string, updates: Partial<DemographicData>) => {\n    setMapState(prev => ({\n      ...prev,\n      demographics: prev.demographics.map(demo =>\n        demo.id === id ? { ...demo, ...updates } : demo\n      ),\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const removeDemographicData = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      demographics: prev.demographics.filter(d => d.id !== id),\n      selectedDemographicId: prev.selectedDemographicId === id ? null : prev.selectedDemographicId,\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const selectDemographic = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      selectedDemographicId: id,\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const getDemographicsInRadius = useCallback((location: { lat: number; lng: number }, radius: number) => {\n    return mapState.demographics.filter(demo => {\n      const distance = Math.sqrt(\n        Math.pow(demo.coordinates.lat - location.lat, 2) + \n        Math.pow(demo.coordinates.lng - location.lng, 2)\n      ) * 111000; // Rough conversion to meters\n      return distance <= radius;\n    });\n  }, [mapState.demographics]);\n\n  // Market Analysis Functions\n  const conductMarketAnalysis = useCallback(async (\n    location: { lat: number; lng: number }, \n    radius: number, \n    options?: { cuisineType?: CuisineType; restaurantType?: RestaurantType }\n  ): Promise<MarketAnalysis> => {\n    const id = uuidv4();\n    \n    setMapState(prev => ({ ...prev, isAnalyzing: true, analysisProgress: 0 }));\n\n    // Simulate analysis with progress updates\n    for (let i = 0; i <= 100; i += 20) {\n      await new Promise(resolve => setTimeout(resolve, 200));\n      setMapState(prev => ({ ...prev, analysisProgress: i }));\n    }\n\n    const competitors = getCompetitors(location, radius);\n    const demographics = getDemographicsInRadius(location, radius);\n    \n    const analysis: MarketAnalysis = {\n      id,\n      timestamp: new Date(),\n      location,\n      radius,\n      competitorCount: competitors.length,\n      marketSaturation: competitors.length > 10 ? \"high\" : competitors.length > 5 ? \"medium\" : \"low\",\n      opportunityScore: Math.max(0, 100 - (competitors.length * 10)),\n      recommendedCuisines: [\"italian\", \"mexican\", \"asian\"] as CuisineType[],\n      recommendedPriceRange: \"$$\",\n      estimatedRevenue: {\n        conservative: 180000,\n        realistic: 250000,\n        optimistic: 320000,\n      },\n      riskFactors: competitors.length > 8 ? [\"High competition\", \"Market saturation\"] : [\"Normal market risk\"],\n      strengths: demographics.length > 0 ? [\"Good demographic data available\"] : [],\n      insights: [\n        `${competitors.length} competitors found within ${radius}m radius`,\n        `Market saturation level: ${competitors.length > 10 ? \"high\" : competitors.length > 5 ? \"medium\" : \"low\"}`,\n        `Demographic data shows ${demographics.reduce((sum, d) => sum + d.population, 0)} people in area`\n      ]\n    };\n\n    setMapState(prev => ({\n      ...prev,\n      marketAnalyses: [...prev.marketAnalyses, analysis],\n      currentAnalysis: analysis,\n      isAnalyzing: false,\n      analysisProgress: 100,\n    }));\n\n    triggerSync();\n    return analysis;\n  }, [getCompetitors, getDemographicsInRadius, triggerSync]);\n\n  const updateMarketAnalysis = useCallback((id: string, updates: Partial<MarketAnalysis>) => {\n    setMapState(prev => ({\n      ...prev,\n      marketAnalyses: prev.marketAnalyses.map(analysis =>\n        analysis.id === id ? { ...analysis, ...updates } : analysis\n      ),\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const removeMarketAnalysis = useCallback((id: string) => {\n    setMapState(prev => ({\n      ...prev,\n      marketAnalyses: prev.marketAnalyses.filter(a => a.id !== id),\n      currentAnalysis: prev.currentAnalysis?.id === id ? null : prev.currentAnalysis,\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const getLatestAnalysis = useCallback(() => {\n    return mapState.currentAnalysis;\n  }, [mapState.currentAnalysis]);\n\n  // Research Filters\n  const updateResearchFilters = useCallback((filters: Partial<MapState[\"researchFilters\"]>) => {\n    setMapState(prev => ({\n      ...prev,\n      researchFilters: { ...prev.researchFilters, ...filters },\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  const resetResearchFilters = useCallback(() => {\n    setMapState(prev => ({\n      ...prev,\n      researchFilters: {\n        cuisineTypes: [],\n        restaurantTypes: [],\n        priceRanges: [],\n        radius: 2,\n        showCompetitors: true,\n        showDemographics: true,\n        showFootTraffic: false,\n        showRevenueZones: false,\n        showDeliveryHotspots: false,\n        showMarketGaps: false,\n        showPriceComparison: false,\n        competitorThreatLevel: [\"low\", \"medium\", \"high\", \"critical\"],\n        marketPosition: [\"leader\", \"challenger\", \"follower\", \"niche\"],\n        minimumRating: 0,\n        maximumDistance: 5000,\n        dayPartFilter: [],\n        customerSegmentFilter: [],\n      },\n    }));\n\n    triggerSync();\n  }, [triggerSync]);\n\n  // AI-Powered Insights (Mock implementations for now)\n  const generateLocationInsights = useCallback(async (location: { lat: number; lng: number }): Promise<string[]> => {\n    await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n    return [\n      \"High foot traffic area with excellent visibility\",\n      \"Strong demographic match for casual dining\",\n      \"Limited parking but good public transport access\",\n      \"Growing neighborhood with increasing property values\"\n    ];\n  }, []);\n\n  const generateCompetitorAnalysis = useCallback(async (location: { lat: number; lng: number }, radius: number) => {\n    await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API call\n    const competitors = getCompetitors(location, radius);\n    return {\n      competitorCount: competitors.length,\n      averageRating: competitors.reduce((sum, c) => sum + c.rating, 0) / competitors.length || 0,\n      priceDistribution: competitors.reduce((acc, c) => {\n        acc[c.priceRange] = (acc[c.priceRange] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>),\n      cuisineGaps: [\"korean\", \"mediterranean\", \"middle_eastern\"] as CuisineType[],\n    };\n  }, [getCompetitors]);\n\n  const generateRevenueProjection = useCallback(async (\n    restaurant: Partial<RestaurantData>, \n    demographics: DemographicData[]\n  ): Promise<RevenueData> => {\n    await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate complex calculation\n    \n    const totalPopulation = demographics.reduce((sum, d) => sum + d.population, 0);\n    const averageSpend = restaurant.averageSpend || 25;\n    const capacity = restaurant.capacity || 50;\n    \n    const totalRevenue = Math.round(totalPopulation * 0.1 * averageSpend * 12);\n    \n    return {\n      monthlyRevenue: {\n        \"Jan\": 18000, \"Feb\": 19000, \"Mar\": 22000, \"Apr\": 24000,\n        \"May\": 26000, \"Jun\": 28000, \"Jul\": 30000, \"Aug\": 29000,\n        \"Sep\": 25000, \"Oct\": 23000, \"Nov\": 21000, \"Dec\": 25000\n      },\n      dailyAverage: Math.round((totalPopulation * 0.1 * averageSpend) / 30),\n      projectedAnnual: totalRevenue,\n      costStructure: {\n        food: 0.30,\n        labor: 0.25,\n        rent: 0.15,\n        utilities: 0.05,\n        marketing: 0.08,\n        other: 0.17,\n      },\n      profitMargin: 0.12,\n      // Enhanced revenue analytics\n      daily: { \"2024-01-01\": 800, \"2024-01-02\": 850, \"2024-01-03\": 900 },\n      monthly: { \"Jan\": 18000, \"Feb\": 19000, \"Mar\": 22000, \"Apr\": 24000 },\n      seasonal: { \"Spring\": 72000, \"Summer\": 87000, \"Fall\": 69000, \"Winter\": 62000 },\n      totalRevenue: totalRevenue,\n      averageOrderValue: averageSpend,\n      peakRevenueHours: [\"12:00\", \"18:00\", \"19:00\"],\n      revenueByDayPart: {\n        breakfast: 5000,\n        brunch: 8000,\n        lunch: 12000,\n        afternoon: 3000,\n        dinner: 15000,\n        late_night: 2000,\n      },\n      revenueGrowthRate: 5.2, // percentage\n      costOfGoodsSold: totalRevenue * 0.30,\n      operatingExpenses: totalRevenue * 0.70,\n      netProfit: totalRevenue * 0.12,\n      breakEvenPoint: 45, // orders per day\n    };\n  }, []);\n\n  const generateOptimalPricing = useCallback(async (\n    location: { lat: number; lng: number }, \n    cuisine: CuisineType\n  ): Promise<{ priceRange: string; reasoning: string }> => {\n    await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n    const demographics = getDemographicsInRadius(location, 1000);\n    const avgIncome = demographics.reduce((sum, d) => {\n      return sum + (d.incomeRanges[\"50k_75k\"] + d.incomeRanges[\"75k_100k\"] * 1.5);\n    }, 0) / demographics.length || 0;\n\n    const priceRange = avgIncome > 1000 ? \"$$\" : \"$\";\n    const reasoning = `Based on local demographics showing average income levels, ${priceRange} pricing is optimal for ${cuisine} cuisine in this area.`;\n    \n    return { priceRange, reasoning };\n  }, [getDemographicsInRadius]);\n\n  // Data Export/Import\n  const exportRestaurantData = useCallback(() => {\n    return JSON.stringify({\n      restaurants: mapState.restaurants,\n      demographics: mapState.demographics,\n      marketAnalyses: mapState.marketAnalyses,\n      researchFilters: mapState.researchFilters,\n      exportedAt: new Date().toISOString(),\n    });\n  }, [mapState]);\n\n  const importRestaurantData = useCallback((data: string) => {\n    try {\n      const parsed = JSON.parse(data);\n      setMapState(prev => ({\n        ...prev,\n        restaurants: parsed.restaurants || [],\n        demographics: parsed.demographics || [],\n        marketAnalyses: parsed.marketAnalyses || [],\n        researchFilters: parsed.researchFilters || prev.researchFilters,\n      }));\n      triggerSync();\n    } catch (error) {\n      console.error('Failed to import restaurant data:', error);\n    }\n  }, [triggerSync]);\n\n  const generateMarketReport = useCallback(async (analysisId: string): Promise<{ pdf: Blob; insights: string[] }> => {\n    await new Promise(resolve => setTimeout(resolve, 3000)); // Simulate report generation\n    const analysis = mapState.marketAnalyses.find(a => a.id === analysisId);\n    \n    if (!analysis) {\n      throw new Error('Analysis not found');\n    }\n\n    // Mock PDF generation\n    const pdfContent = `Market Analysis Report for ${analysis.location.lat}, ${analysis.location.lng}`;\n    const pdf = new Blob([pdfContent], { type: 'application/pdf' });\n    \n    return {\n      pdf,\n      insights: analysis.insights,\n    };\n  }, [mapState.marketAnalyses]);\n\n  // Buffer Radius Management Functions\n  const setBufferRadius = useCallback((radius: number) => {\n    setMapState(prev => ({\n      ...prev,\n      bufferRadius: Math.max(50, Math.min(10000, radius)), // Clamp between 50m and 10km\n    }));\n    triggerSync();\n  }, [triggerSync]);\n\n  const setBufferCenter = useCallback((center: { lat: number; lng: number } | null) => {\n    setMapState(prev => ({\n      ...prev,\n      bufferCenter: center,\n    }));\n    triggerSync();\n  }, [triggerSync]);\n\n  const toggleBufferRadius = useCallback(() => {\n    setMapState(prev => ({\n      ...prev,\n      showBufferRadius: !prev.showBufferRadius,\n      // If enabling and no center is set, use map center\n      bufferCenter: !prev.showBufferRadius && !prev.bufferCenter \n        ? { lat: prev.center.lat, lng: prev.center.lng }\n        : prev.bufferCenter,\n    }));\n    triggerSync();\n  }, [triggerSync]);\n\n  const setBufferOpacity = useCallback((opacity: number) => {\n    setMapState(prev => ({\n      ...prev,\n      bufferOpacity: Math.max(0, Math.min(1, opacity)), // Clamp between 0 and 1\n    }));\n    triggerSync();\n  }, [triggerSync]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (syncTimeoutRef.current) {\n        clearTimeout(syncTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <SharedStateContext.Provider\n      value={{\n        mapState,\n        updateZoom,\n        updateCenter,\n        updateBounds,\n        addMarker,\n        updateMarker,\n        removeMarker,\n        selectMarker,\n        clearMarkers,\n        bulkAddMarkers,\n        addLayer,\n        updateLayer,\n        removeLayer,\n        toggleLayer,\n        setMode,\n        setActiveMarkerType,\n        executeCommand,\n        registerComponent,\n        generateComponent,\n        \n        // Restaurant Research Functions\n        addRestaurant,\n        updateRestaurant,\n        removeRestaurant,\n        selectRestaurant,\n        getRestaurantsByType,\n        getRestaurantsByCuisine,\n        getCompetitors,\n        \n        // Demographic Analysis\n        addDemographicData,\n        updateDemographicData,\n        removeDemographicData,\n        selectDemographic,\n        getDemographicsInRadius,\n        \n        // Market Analysis\n        conductMarketAnalysis,\n        updateMarketAnalysis,\n        removeMarketAnalysis,\n        getLatestAnalysis,\n        \n        // Research Filters\n        updateResearchFilters,\n        resetResearchFilters,\n        \n        // AI-Powered Insights\n        generateLocationInsights,\n        generateCompetitorAnalysis,\n        generateRevenueProjection,\n        generateOptimalPricing,\n        \n        // Data Export/Import\n        exportRestaurantData,\n        importRestaurantData,\n        generateMarketReport,\n        \n        undo,\n        redo,\n        canUndo,\n        canRedo,\n        clearHistory,\n        enableRealTime,\n        disableRealTime,\n        forceSync,\n        setSyncing,\n        getMarkersByType,\n        getMarkersInBounds,\n        exportState,\n        importState,\n\n        // Buffer Radius Management\n        setBufferRadius,\n        setBufferCenter,\n        toggleBufferRadius,\n        setBufferOpacity,\n      }}\n    >\n      {children}\n    </SharedStateContext.Provider>\n  );\n}\n\n// Custom hook to use the shared state\nexport function useSharedState() {\n  const context = useContext(SharedStateContext);\n  if (context === undefined) {\n    throw new Error(\"useSharedState must be used within a SharedStateProvider\");\n  }\n  return context;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,yJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,mLAAG,EACxB,qNACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,+NAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,oLAAI,GAAG;IAC9B,qBACE,0PAAC;QACC,WAAW,IAAA,qIAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1505, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\" flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,+NAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QACC,KAAK;QACL,WAAW,IAAA,qIAAE,EACX,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,+NAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QACC,KAAK;QACL,WAAW,IAAA,qIAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,+NAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QACC,KAAK;QACL,WAAW,IAAA,qIAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,+NAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QACC,KAAK;QACL,WAAW,IAAA,qIAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,+NAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qIAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,+NAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,0PAAC;QACC,KAAK;QACL,WAAW,IAAA,qIAAE,EAAC,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,mLAAG,EACvB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,0PAAC;QAAI,WAAW,IAAA,qIAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/landing/LandingPage.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  ChevronRight,\n  BarChart3,\n  TrendingUp,\n  Users,\n  MapPin,\n  MessageSquare,\n  Search,\n  Target,\n  Zap,\n  Brain,\n  Building2,\n  Coffee,\n  Utensils,\n  FileText,\n} from \"lucide-react\";\n\ninterface LandingPageProps {\n  onNavigateToResearch: () => void;\n  onNavigateToChat: (message?: string) => void;\n}\n\nconst LandingPage: React.FC<LandingPageProps> = ({\n  onNavigateToResearch,\n  onNavigateToChat,\n}) => {\n  const router = useRouter();\n  const [hoveredCard, setHoveredCard] = useState<string | null>(null);\n\n  const workspaceTemplates = [\n    {\n      id: \"market-research\",\n      title: \"MarketMapper AI\",\n      subtitle: \"Deep Market Research Report\",\n      icon: BarChart3,\n      description: \"Comprehensive market analysis with AI-powered insights\",\n      features: [\"Competitor Analysis\", \"Market Trends\", \"Consumer Behavior\", \"Growth Projections\"],\n      onClick: onNavigateToResearch,\n    },\n    {\n      id: \"culinary-compass\",\n      title: \"BiteBase Intelligence\",\n      subtitle: \"Restaurant Intelligence Chat\",\n      icon: MessageSquare,\n      description: \"Interactive AI assistant for restaurant analytics\",\n      features: [\"Real-time Analytics\", \"Menu Optimization\", \"Customer Insights\", \"Performance Tracking\"],\n      onClick: onNavigateToChat,\n    },\n    {\n      id: \"location-intelligence\",\n      title: \"Location Intelligence\",\n      subtitle: \"Site Selection Analysis\",\n      icon: MapPin,\n      description: \"AI-powered location analysis for optimal restaurant placement\",\n      features: [\"Demographic Analysis\", \"Foot Traffic\", \"Competition Mapping\", \"Revenue Forecasting\"],\n      onClick: onNavigateToResearch,\n    },\n    {\n      id: \"customer-insights\",\n      title: \"Customer Intelligence\",\n      subtitle: \"Behavioral Analytics\",\n      icon: Users,\n      description: \"Deep customer behavior analysis and segmentation\",\n      features: [\"Customer Segmentation\", \"Preference Analysis\", \"Loyalty Tracking\", \"Churn Prediction\"],\n      onClick: onNavigateToChat,\n    },\n  ];\n\n  const quickActions = [\n    {\n      icon: Building2,\n      label: \"Analyze restaurant market potential\",\n      action: onNavigateToResearch,\n    },\n    {\n      icon: TrendingUp,\n      label: \"Generate competitive analysis report\",\n      action: onNavigateToResearch,\n    },\n    {\n      icon: Coffee,\n      label: \"Optimize menu pricing strategy\",\n      action: () => onNavigateToChat(\"Optimize menu pricing strategy for my restaurant. Analyze current market trends and provide recommendations.\"),\n    },\n    {\n      icon: Utensils,\n      label: \"Forecast customer demand patterns\",\n      action: () => onNavigateToChat(\"Forecast customer demand patterns for my restaurant. Analyze seasonal trends and peak hours.\"),\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3\">\n                <img\n                  src=\"https://www.gstatic.com/monospace/250314/icon-192.png\"\n                  alt=\"BiteBase Studio\"\n                  className=\"w-8 h-8\"\n                />\n                <h1 className=\"text-xl font-semibold text-gray-900\">BiteBase Studio</h1>\n                <Badge variant=\"secondary\" className=\"text-xs bg-orange-100 text-orange-800 border-orange-200\">\n                  preview\n                </Badge>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={() => router.push('/reports')}\n                className=\"flex items-center space-x-2\"\n              >\n                <FileText className=\"h-4 w-4\" />\n                <span>Reports Dashboard</span>\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900 hover:bg-gray-100\">\n                Documentation\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900 hover:bg-gray-100\">\n                Support\n              </Button>\n              <div className=\"w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center\">\n                <span className=\"text-xs font-medium text-white\">K</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-6 py-12\">\n        {/* Welcome Section */}\n        <div className=\"mb-12\">\n          <div className=\"mb-6\">\n            <span className=\"text-3xl font-light text-gray-900 mb-2 block\">Hello, Khiw</span>\n            <span className=\"text-lg text-gray-600\">Welcome to your restaurant intelligence platform</span>\n          </div>\n        </div>\n\n        {/* AI Chat Section */}\n        <div className=\"mb-16\">\n          <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">\n            Start with AI Intelligence\n          </h2>\n          <Card className=\"bg-white border-gray-200 shadow-sm\">\n            <CardContent className=\"p-8\">\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"p-3 bg-gradient-to-r from-orange-500 to-red-600 rounded-lg\">\n                  <Brain className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900\">BiteBase AI Assistant</h3>\n                  <p className=\"text-gray-600\">Get instant insights about your restaurant business</p>\n                </div>\n              </div>\n              \n              <div className=\"relative\">\n                <div className=\"border border-gray-200 rounded-lg bg-gray-50 p-4 mb-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-600 text-sm\">\n                      Try: \"Analyze coffee shop market in downtown Seattle\" or \"Generate customer segmentation report\"\n                    </span>\n                    <Button\n                      onClick={() => onNavigateToChat()}\n                      className=\"bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 text-white\"\n                    >\n                      Start Chat\n                      <ChevronRight className=\"w-4 h-4 ml-2\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Actions */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {quickActions.map((action, index) => (\n                  <Button\n                    key={index}\n                    variant=\"ghost\"\n                    className=\"justify-start h-auto p-4 text-left border border-gray-200 hover:border-orange-300 bg-white hover:bg-orange-50\"\n                    onClick={action.action}\n                  >\n                    <action.icon className=\"w-5 h-5 mr-3 text-orange-600\" />\n                    <span className=\"text-gray-900\">{action.label}</span>\n                  </Button>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Templates Section */}\n        <div className=\"mb-16\">\n          <div className=\"flex items-center justify-between mb-8\">\n            <h2 className=\"text-2xl font-semibold text-gray-900\">Intelligence Workspaces</h2>\n            <Button variant=\"outline\" size=\"sm\" className=\"border-gray-300 text-gray-700 hover:bg-gray-50\">\n              View All Templates\n            </Button>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {workspaceTemplates.map((template) => (\n              <Card\n                key={template.id}\n                className={`bg-white border-gray-200 shadow-sm cursor-pointer transition-all duration-300 hover:shadow-md hover:border-orange-300 ${\n                  hoveredCard === template.id ? \"transform scale-[1.02] shadow-lg border-orange-400\" : \"\"\n                }`}\n                onMouseEnter={() => setHoveredCard(template.id)}\n                onMouseLeave={() => setHoveredCard(null)}\n                onClick={() => template.onClick()}\n              >\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"p-2 bg-gradient-to-r from-orange-500 to-red-600 rounded-lg\">\n                        <template.icon className=\"w-6 h-6 text-white\" />\n                      </div>\n                      <div>\n                        <CardTitle className=\"text-lg text-gray-900\">{template.title}</CardTitle>\n                        <p className=\"text-sm text-gray-600\">{template.subtitle}</p>\n                      </div>\n                    </div>\n                    <ChevronRight className=\"w-5 h-5 text-gray-400\" />\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-700 mb-4\">{template.description}</p>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {template.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center space-x-2\">\n                        <Zap className=\"w-3 h-3 text-orange-600\" />\n                        <span className=\"text-xs text-gray-600\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Recent Workspaces */}\n        <div>\n          <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Recent Intelligence Reports</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {[\n              {\n                title: \"Seattle Coffee Market Analysis\",\n                subtitle: \"market-analysis-001\",\n                status: \"Completed\",\n                updated: \"2 hours ago\",\n              },\n              {\n                title: \"Customer Behavior Study\",\n                subtitle: \"customer-insights-002\", \n                status: \"In Progress\",\n                updated: \"5 hours ago\",\n              },\n              {\n                title: \"Location Intelligence Report\",\n                subtitle: \"location-study-003\",\n                status: \"Completed\",\n                updated: \"1 day ago\",\n              },\n            ].map((workspace, index) => (\n              <Card\n                key={index}\n                className=\"bg-white border-gray-200 shadow-sm cursor-pointer hover:shadow-md hover:border-orange-300 transition-all\"\n                onClick={() => workspace.status === \"Completed\" ? onNavigateToResearch() : onNavigateToChat()}\n              >\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center space-x-3 mb-3\">\n                    <div className=\"w-10 h-10 bg-gradient-to-r from-orange-500 to-red-600 rounded-lg flex items-center justify-center\">\n                      <BarChart3 className=\"w-5 h-5 text-white\" />\n                    </div>\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-gray-900 font-medium\">{workspace.title}</h3>\n                      <p className=\"text-gray-600 text-sm\">{workspace.subtitle}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <Badge\n                      variant={workspace.status === \"Completed\" ? \"default\" : \"secondary\"}\n                      className={`text-xs ${workspace.status === \"Completed\" ? \"bg-green-100 text-green-800 border-green-200\" : \"bg-orange-100 text-orange-800 border-orange-200\"}`}\n                    >\n                      {workspace.status}\n                    </Badge>\n                    <span className=\"text-gray-500 text-xs\">{workspace.updated}</span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2403, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/ui/loading-spinner.tsx"],"sourcesContent":["export const LoadingSpinner = () => (\n  <svg\n    className=\"animate-spin h-5 w-5 text-gray-500\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n  >\n    <circle\n      className=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"4\"\n    ></circle>\n    <path\n      className=\"opacity-75\"\n      fill=\"currentColor\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    ></path>\n  </svg>\n);"],"names":[],"mappings":";;;;;;AAAO,MAAM,iBAAiB,kBAC5B,0PAAC;QACC,WAAU;QACV,OAAM;QACN,MAAK;QACL,SAAQ;;0BAER,0PAAC;gBACC,WAAU;gBACV,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,QAAO;gBACP,aAAY;;;;;;0BAEd,0PAAC;gBACC,WAAU;gBACV,MAAK;gBACL,GAAE","debugId":null}},
    {"offset": {"line": 2446, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/landing/StudioApp.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, Suspense, lazy } from \"react\";\nimport LandingPage from \"./LandingPage\";\nimport { LoadingSpinner } from \"../ui/loading-spinner\";\n\n// Lazy load heavy components to improve initial load time\nconst LazyResearchWorkflow = lazy(() => import(\"./ResearchWorkflow\"));\nconst LazyChatInterface = lazy(() => import(\"../chat/ChatInterface\"));\n\n// Use lightweight map in development, full map in production\nconst LazyMapComponent = lazy(() => \n  process.env.NODE_ENV === 'development' \n    ? import(\"../map/DevMapPlaceholder\")\n    : import(\"../map/MapComponent\")\n);\n\ntype ViewType = \"landing\" | \"research\" | \"chat\";\n\nconst StudioApp: React.FC = () => {\n  const [currentView, setCurrentView] = useState<ViewType>(\"landing\");\n  const [initialChatMessage, setInitialChatMessage] = useState<string>(\"\");\n\n  const navigateToResearch = () => {\n    setInitialChatMessage(\"\"); // Clear any initial message\n    setCurrentView(\"research\");\n  };\n\n  const navigateToChat = (message?: string) => {\n    if (message) {\n      setInitialChatMessage(message);\n    }\n    setCurrentView(\"chat\");\n  };\n\n  const navigateToLanding = () => {\n    setInitialChatMessage(\"\"); // Clear any initial message\n    setCurrentView(\"landing\");\n  };\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case \"landing\":\n        return (\n          <LandingPage\n            onNavigateToResearch={navigateToResearch}\n            onNavigateToChat={navigateToChat}\n          />\n        );\n      case \"research\":\n        return (\n          <Suspense fallback={\n            <div className=\"flex items-center justify-center min-h-screen\">\n              <div className=\"text-center\">\n                <LoadingSpinner />\n                <p className=\"mt-2 text-gray-600\">Loading Research Workspace...</p>\n              </div>\n            </div>\n          }>\n            <LazyResearchWorkflow\n              onNavigateBack={navigateToLanding}\n              onNavigateToChat={navigateToChat}\n            />\n          </Suspense>\n        );\n      case \"chat\":\n        return (\n          <div className=\"min-h-screen bg-white\">\n            {/* Header for Chat */}\n            <div className=\"border-b border-gray-200 bg-white\">\n              <div className=\"max-w-7xl mx-auto px-6 py-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <button\n                      onClick={navigateToLanding}\n                      className=\"text-gray-600 hover:text-gray-900 hover:bg-gray-100 px-2 py-1 rounded flex items-center text-sm\"\n                    >\n                      ← Back to Studio\n                    </button>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-gradient-to-r from-orange-500 to-red-600 rounded-lg flex items-center justify-center\">\n                        <span className=\"text-white text-sm\">💬</span>\n                      </div>\n                      <div>\n                        <h1 className=\"text-lg font-semibold text-gray-900\">BiteBase Intelligence</h1>\n                        <p className=\"text-sm text-gray-600\">Restaurant Intelligence Chat with Map</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <button\n                      onClick={navigateToResearch}\n                      className=\"text-gray-600 hover:text-gray-900 border border-gray-300 hover:border-orange-300 hover:bg-orange-50 px-3 py-1 rounded text-sm\"\n                    >\n                      Switch to Research\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Map and Chat Layout */}\n            <div className=\"h-[calc(100vh-80px)] flex flex-col max-w-full mx-auto px-2 sm:px-3 overflow-hidden bg-gray-50\">\n              <div className=\"flex-1 grid grid-cols-1 lg:grid-cols-3 gap-2 sm:gap-3 lg:gap-4 min-h-0 overflow-hidden p-4\">\n                {/* Map Component - Takes up 2/3 of the space */}\n                <div className=\"lg:col-span-2 min-h-0 overflow-hidden\">\n                  <Suspense fallback={\n                    <div className=\"w-full h-full flex items-center justify-center bg-gray-100 rounded-lg\">\n                      <div className=\"text-center\">\n                        <LoadingSpinner />\n                        <p className=\"mt-2 text-sm text-gray-600\">Loading Map...</p>\n                      </div>\n                    </div>\n                  }>\n                    <LazyMapComponent />\n                  </Suspense>\n                </div>\n                \n                {/* Chat Interface - Takes up 1/3 of the space */}\n                <div className=\"lg:col-span-1 min-h-0 overflow-hidden\">\n                  <Suspense fallback={\n                    <div className=\"w-full h-full flex items-center justify-center bg-white rounded-lg border\">\n                      <div className=\"text-center\">\n                        <LoadingSpinner />\n                        <p className=\"mt-2 text-sm text-gray-600\">Loading Chat...</p>\n                      </div>\n                    </div>\n                  }>\n                    <LazyChatInterface initialMessage={initialChatMessage} />\n                  </Suspense>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <LandingPage\n            onNavigateToResearch={navigateToResearch}\n            onNavigateToChat={navigateToChat}\n          />\n        );\n    }\n  };\n\n  return <div className=\"min-h-screen\">{renderCurrentView()}</div>;\n};\n\nexport default StudioApp;"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,0DAA0D;AAC1D,MAAM,qCAAuB,IAAA,yNAAI,EAAC;AAClC,MAAM,kCAAoB,IAAA,yNAAI,EAAC;AAE/B,6DAA6D;AAC7D,MAAM,iCAAmB,IAAA,yNAAI,EAAC,IAC5B,qKAEI;AAKN,MAAM,YAAsB;IAC1B,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,6NAAQ,EAAW;IACzD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,6NAAQ,EAAS;IAErE,MAAM,qBAAqB;QACzB,sBAAsB,KAAK,4BAA4B;QACvD,eAAe;IACjB;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,SAAS;YACX,sBAAsB;QACxB;QACA,eAAe;IACjB;IAEA,MAAM,oBAAoB;QACxB,sBAAsB,KAAK,4BAA4B;QACvD,eAAe;IACjB;IAEA,MAAM,oBAAoB;QACxB,OAAQ;YACN,KAAK;gBACH,qBACE,0PAAC,mKAAW;oBACV,sBAAsB;oBACtB,kBAAkB;;;;;;YAGxB,KAAK;gBACH,qBACE,0PAAC,6NAAQ;oBAAC,wBACR,0PAAC;wBAAI,WAAU;kCACb,cAAA,0PAAC;4BAAI,WAAU;;8CACb,0PAAC,4KAAc;;;;;8CACf,0PAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;;;;;;8BAItC,cAAA,0PAAC;wBACC,gBAAgB;wBAChB,kBAAkB;;;;;;;;;;;YAI1B,KAAK;gBACH,qBACE,0PAAC;oBAAI,WAAU;;sCAEb,0PAAC;4BAAI,WAAU;sCACb,cAAA,0PAAC;gCAAI,WAAU;0CACb,cAAA,0PAAC;oCAAI,WAAU;;sDACb,0PAAC;4CAAI,WAAU;;8DACb,0PAAC;oDACC,SAAS;oDACT,WAAU;8DACX;;;;;;8DAGD,0PAAC;oDAAI,WAAU;;sEACb,0PAAC;4DAAI,WAAU;sEACb,cAAA,0PAAC;gEAAK,WAAU;0EAAqB;;;;;;;;;;;sEAEvC,0PAAC;;8EACC,0PAAC;oEAAG,WAAU;8EAAsC;;;;;;8EACpD,0PAAC;oEAAE,WAAU;8EAAwB;;;;;;;;;;;;;;;;;;;;;;;;sDAI3C,0PAAC;4CAAI,WAAU;sDACb,cAAA,0PAAC;gDACC,SAAS;gDACT,WAAU;0DACX;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAST,0PAAC;4BAAI,WAAU;sCACb,cAAA,0PAAC;gCAAI,WAAU;;kDAEb,0PAAC;wCAAI,WAAU;kDACb,cAAA,0PAAC,6NAAQ;4CAAC,wBACR,0PAAC;gDAAI,WAAU;0DACb,cAAA,0PAAC;oDAAI,WAAU;;sEACb,0PAAC,4KAAc;;;;;sEACf,0PAAC;4DAAE,WAAU;sEAA6B;;;;;;;;;;;;;;;;;sDAI9C,cAAA,0PAAC;;;;;;;;;;;;;;;kDAKL,0PAAC;wCAAI,WAAU;kDACb,cAAA,0PAAC,6NAAQ;4CAAC,wBACR,0PAAC;gDAAI,WAAU;0DACb,cAAA,0PAAC;oDAAI,WAAU;;sEACb,0PAAC,4KAAc;;;;;sEACf,0PAAC;4DAAE,WAAU;sEAA6B;;;;;;;;;;;;;;;;;sDAI9C,cAAA,0PAAC;gDAAkB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOjD;gBACE,qBACE,0PAAC,mKAAW;oBACV,sBAAsB;oBACtB,kBAAkB;;;;;;QAG1B;IACF;IAEA,qBAAO,0PAAC;QAAI,WAAU;kBAAgB;;;;;;AACxC;uCAEe","debugId":null}}]
}