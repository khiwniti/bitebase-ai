{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/shared/SharedStateProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SharedStateProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SharedStateProvider() from the server but SharedStateProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/shared/SharedStateProvider.tsx <module evaluation>\",\n    \"SharedStateProvider\",\n);\nexport const useSharedState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSharedState() from the server but useSharedState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/shared/SharedStateProvider.tsx <module evaluation>\",\n    \"useSharedState\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,sBAAsB,IAAA,oRAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,wFACA;AAEG,MAAM,iBAAiB,IAAA,oRAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,wFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/shared/SharedStateProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SharedStateProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SharedStateProvider() from the server but SharedStateProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/shared/SharedStateProvider.tsx\",\n    \"SharedStateProvider\",\n);\nexport const useSharedState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSharedState() from the server but useSharedState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/shared/SharedStateProvider.tsx\",\n    \"useSharedState\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,sBAAsB,IAAA,oRAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,oEACA;AAEG,MAAM,iBAAiB,IAAA,oRAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/landing/StudioApp.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/src/components/landing/StudioApp.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/landing/StudioApp.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,oRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/components/landing/StudioApp.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/src/components/landing/StudioApp.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/landing/StudioApp.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,oRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///workspace/bitebase-ai/frontend/src/app/page.tsx"],"sourcesContent":["import { SharedStateProvider } from \"@/components/shared/SharedStateProvider\";\nimport StudioApp from \"@/components/landing/StudioApp\";\n\nexport default function Home() {\n  return (\n    <SharedStateProvider>\n      <StudioApp />\n    </SharedStateProvider>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,0PAAC,sLAAmB;kBAClB,cAAA,0PAAC,iKAAS;;;;;;;;;;AAGhB","debugId":null}}]
}